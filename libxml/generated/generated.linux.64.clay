/* automatically generated by clay-bindgen */

external (cdecl) xmlCheckVersion(arg0:Int) : ;

alias xmlFreeFunc = CCodePointer[[OpaquePointer],[]];

alias xmlMallocFunc = CCodePointer[[size_t],[OpaquePointer]];

alias xmlReallocFunc = CCodePointer[[OpaquePointer, size_t],[OpaquePointer]];

alias xmlStrdupFunc = CCodePointer[[Pointer[CChar]],[Pointer[CChar]]];

external (cdecl) xmlMemSetup(arg0:xmlFreeFunc, arg1:xmlMallocFunc, arg2:xmlReallocFunc, arg3:xmlStrdupFunc) : Int;

external (cdecl) xmlMemGet(arg0:Pointer[xmlFreeFunc], arg1:Pointer[xmlMallocFunc], arg2:Pointer[xmlReallocFunc], arg3:Pointer[xmlStrdupFunc]) : Int;

external (cdecl) xmlGcMemSetup(arg0:xmlFreeFunc, arg1:xmlMallocFunc, arg2:xmlMallocFunc, arg3:xmlReallocFunc, arg4:xmlStrdupFunc) : Int;

external (cdecl) xmlGcMemGet(arg0:Pointer[xmlFreeFunc], arg1:Pointer[xmlMallocFunc], arg2:Pointer[xmlMallocFunc], arg3:Pointer[xmlReallocFunc], arg4:Pointer[xmlStrdupFunc]) : Int;

external (cdecl) xmlInitMemory() : Int;

external (cdecl) xmlCleanupMemory() : ;

external (cdecl) xmlMemUsed() : Int;

external (cdecl) xmlMemBlocks() : Int;

external (cdecl) xmlMemDisplay(arg0:Pointer[FILE]) : ;

external (cdecl) xmlMemDisplayLast(arg0:Pointer[FILE], arg1:CLong) : ;

external (cdecl) xmlMemShow(arg0:Pointer[FILE], arg1:Int) : ;

external (cdecl) xmlMemoryDump() : ;

external (cdecl) xmlMemMalloc(arg0:size_t) : OpaquePointer;

external (cdecl) xmlMemRealloc(arg0:OpaquePointer, arg1:size_t) : OpaquePointer;

external (cdecl) xmlMemFree(arg0:OpaquePointer) : ;

external (cdecl) xmlMemoryStrdup(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) xmlMallocLoc(arg0:size_t, arg1:Pointer[CChar], arg2:Int) : OpaquePointer;

external (cdecl) xmlReallocLoc(arg0:OpaquePointer, arg1:size_t, arg2:Pointer[CChar], arg3:Int) : OpaquePointer;

external (cdecl) xmlMallocAtomicLoc(arg0:size_t, arg1:Pointer[CChar], arg2:Int) : OpaquePointer;

external (cdecl) xmlMemStrdupLoc(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Int) : Pointer[CChar];

alias Struct__xmlMutex = Opaque;

alias xmlMutex = Struct__xmlMutex;

alias xmlMutexPtr = Pointer[xmlMutex];

alias Struct__xmlRMutex = Opaque;

alias xmlRMutex = Struct__xmlRMutex;

alias xmlRMutexPtr = Pointer[xmlRMutex];

alias xmlChar = CUChar;

external (cdecl) xmlStrdup(arg0:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlStrndup(arg0:Pointer[xmlChar], arg1:Int) : Pointer[xmlChar];

external (cdecl) xmlCharStrndup(arg0:Pointer[CChar], arg1:Int) : Pointer[xmlChar];

external (cdecl) xmlCharStrdup(arg0:Pointer[CChar]) : Pointer[xmlChar];

external (cdecl) xmlStrsub(arg0:Pointer[xmlChar], arg1:Int, arg2:Int) : Pointer[xmlChar];

external (cdecl) xmlStrchr(arg0:Pointer[xmlChar], arg1:xmlChar) : Pointer[xmlChar];

external (cdecl) xmlStrstr(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlStrcasestr(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlStrcmp(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlStrncmp(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar], arg2:Int) : Int;

external (cdecl) xmlStrcasecmp(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlStrncasecmp(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar], arg2:Int) : Int;

external (cdecl) xmlStrEqual(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlStrQEqual(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : Int;

external (cdecl) xmlStrlen(arg0:Pointer[xmlChar]) : Int;

external (cdecl) xmlStrcat(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlStrncat(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar], arg2:Int) : Pointer[xmlChar];

external (cdecl) xmlStrncatNew(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar], arg2:Int) : Pointer[xmlChar];

external (cdecl) xmlStrPrintf(arg0:Pointer[xmlChar], arg1:Int, arg2:Pointer[xmlChar], ..) : Int;

external (cdecl) xmlStrVPrintf(arg0:Pointer[xmlChar], arg1:Int, arg2:Pointer[xmlChar], arg3:Pointer[__va_list_tag]) : Int;

external (cdecl) xmlGetUTF8Char(arg0:Pointer[CUChar], arg1:Pointer[Int]) : Int;

external (cdecl) xmlCheckUTF8(arg0:Pointer[CUChar]) : Int;

external (cdecl) xmlUTF8Strsize(arg0:Pointer[xmlChar], arg1:Int) : Int;

external (cdecl) xmlUTF8Strndup(arg0:Pointer[xmlChar], arg1:Int) : Pointer[xmlChar];

external (cdecl) xmlUTF8Strpos(arg0:Pointer[xmlChar], arg1:Int) : Pointer[xmlChar];

external (cdecl) xmlUTF8Strloc(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlUTF8Strsub(arg0:Pointer[xmlChar], arg1:Int, arg2:Int) : Pointer[xmlChar];

external (cdecl) xmlUTF8Strlen(arg0:Pointer[xmlChar]) : Int;

external (cdecl) xmlUTF8Size(arg0:Pointer[xmlChar]) : Int;

external (cdecl) xmlUTF8Charcmp(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : Int;

alias xmlParserInputBuffer = Struct__xmlParserInputBuffer;

alias xmlParserInputBufferPtr = Pointer[xmlParserInputBuffer];

alias xmlOutputBuffer = Struct__xmlOutputBuffer;

alias xmlOutputBufferPtr = Pointer[xmlOutputBuffer];

alias xmlParserInput = Struct__xmlParserInput;

alias xmlParserInputPtr = Pointer[xmlParserInput];

alias xmlParserCtxt = Struct__xmlParserCtxt;

alias xmlParserCtxtPtr = Pointer[xmlParserCtxt];

alias xmlSAXLocator = Struct__xmlSAXLocator;

alias xmlSAXLocatorPtr = Pointer[xmlSAXLocator];

alias xmlSAXHandler = Struct__xmlSAXHandler;

alias xmlSAXHandlerPtr = Pointer[xmlSAXHandler];

alias xmlEntity = Struct__xmlEntity;

alias xmlEntityPtr = Pointer[xmlEntity];

alias Enum_Unnamed1 = UInt;
alias XML_BUFFER_ALLOC_DOUBLEIT = UInt(0);
alias XML_BUFFER_ALLOC_EXACT = UInt(1);
alias XML_BUFFER_ALLOC_IMMUTABLE = UInt(2);
alias XML_BUFFER_ALLOC_IO = UInt(3);

alias xmlBufferAllocationScheme = UInt;

alias xmlBuffer = Struct__xmlBuffer;

alias xmlBufferPtr = Pointer[xmlBuffer];

record Struct__xmlBuffer (
    content : Pointer[xmlChar],
    use : UInt,
    size : UInt,
    alloc : xmlBufferAllocationScheme,
    contentIO : Pointer[xmlChar],
);

alias Enum_Unnamed2 = UInt;
alias XML_ELEMENT_NODE = UInt(1);
alias XML_ATTRIBUTE_NODE = UInt(2);
alias XML_TEXT_NODE = UInt(3);
alias XML_CDATA_SECTION_NODE = UInt(4);
alias XML_ENTITY_REF_NODE = UInt(5);
alias XML_ENTITY_NODE = UInt(6);
alias XML_PI_NODE = UInt(7);
alias XML_COMMENT_NODE = UInt(8);
alias XML_DOCUMENT_NODE = UInt(9);
alias XML_DOCUMENT_TYPE_NODE = UInt(10);
alias XML_DOCUMENT_FRAG_NODE = UInt(11);
alias XML_NOTATION_NODE = UInt(12);
alias XML_HTML_DOCUMENT_NODE = UInt(13);
alias XML_DTD_NODE = UInt(14);
alias XML_ELEMENT_DECL = UInt(15);
alias XML_ATTRIBUTE_DECL = UInt(16);
alias XML_ENTITY_DECL = UInt(17);
alias XML_NAMESPACE_DECL = UInt(18);
alias XML_XINCLUDE_START = UInt(19);
alias XML_XINCLUDE_END = UInt(20);
alias XML_DOCB_DOCUMENT_NODE = UInt(21);

alias xmlElementType = UInt;

alias xmlNotation = Struct__xmlNotation;

alias xmlNotationPtr = Pointer[xmlNotation];

record Struct__xmlNotation (
    name : Pointer[xmlChar],
    PublicID : Pointer[xmlChar],
    SystemID : Pointer[xmlChar],
);

alias Enum_Unnamed3 = UInt;
alias XML_ATTRIBUTE_CDATA = UInt(1);
alias XML_ATTRIBUTE_ID = UInt(2);
alias XML_ATTRIBUTE_IDREF = UInt(3);
alias XML_ATTRIBUTE_IDREFS = UInt(4);
alias XML_ATTRIBUTE_ENTITY = UInt(5);
alias XML_ATTRIBUTE_ENTITIES = UInt(6);
alias XML_ATTRIBUTE_NMTOKEN = UInt(7);
alias XML_ATTRIBUTE_NMTOKENS = UInt(8);
alias XML_ATTRIBUTE_ENUMERATION = UInt(9);
alias XML_ATTRIBUTE_NOTATION = UInt(10);

alias xmlAttributeType = UInt;

alias Enum_Unnamed4 = UInt;
alias XML_ATTRIBUTE_NONE = UInt(1);
alias XML_ATTRIBUTE_REQUIRED = UInt(2);
alias XML_ATTRIBUTE_IMPLIED = UInt(3);
alias XML_ATTRIBUTE_FIXED = UInt(4);

alias xmlAttributeDefault = UInt;

alias xmlEnumeration = Struct__xmlEnumeration;

alias xmlEnumerationPtr = Pointer[xmlEnumeration];

record Struct__xmlEnumeration (
    next : Pointer[Struct__xmlEnumeration],
    name : Pointer[xmlChar],
);

alias xmlAttribute = Struct__xmlAttribute;

alias xmlAttributePtr = Pointer[xmlAttribute];

record Struct__xmlAttribute (
    _private : OpaquePointer,
    type : xmlElementType,
    name : Pointer[xmlChar],
    children : Pointer[Struct__xmlNode],
    last : Pointer[Struct__xmlNode],
    parent : Pointer[Struct__xmlDtd],
    next : Pointer[Struct__xmlNode],
    prev : Pointer[Struct__xmlNode],
    doc : Pointer[Struct__xmlDoc],
    nexth : Pointer[Struct__xmlAttribute],
    atype : xmlAttributeType,
    def : xmlAttributeDefault,
    defaultValue : Pointer[xmlChar],
    tree : xmlEnumerationPtr,
    prefix : Pointer[xmlChar],
    elem : Pointer[xmlChar],
);

alias Enum_Unnamed5 = UInt;
alias XML_ELEMENT_CONTENT_PCDATA = UInt(1);
alias XML_ELEMENT_CONTENT_ELEMENT = UInt(2);
alias XML_ELEMENT_CONTENT_SEQ = UInt(3);
alias XML_ELEMENT_CONTENT_OR = UInt(4);

alias xmlElementContentType = UInt;

alias Enum_Unnamed6 = UInt;
alias XML_ELEMENT_CONTENT_ONCE = UInt(1);
alias XML_ELEMENT_CONTENT_OPT = UInt(2);
alias XML_ELEMENT_CONTENT_MULT = UInt(3);
alias XML_ELEMENT_CONTENT_PLUS = UInt(4);

alias xmlElementContentOccur = UInt;

alias xmlElementContent = Struct__xmlElementContent;

alias xmlElementContentPtr = Pointer[xmlElementContent];

record Struct__xmlElementContent (
    type : xmlElementContentType,
    ocur : xmlElementContentOccur,
    name : Pointer[xmlChar],
    c1 : Pointer[Struct__xmlElementContent],
    c2 : Pointer[Struct__xmlElementContent],
    parent : Pointer[Struct__xmlElementContent],
    prefix : Pointer[xmlChar],
);

alias Enum_Unnamed7 = UInt;
alias XML_ELEMENT_TYPE_UNDEFINED = UInt(0);
alias XML_ELEMENT_TYPE_EMPTY = UInt(1);
alias XML_ELEMENT_TYPE_ANY = UInt(2);
alias XML_ELEMENT_TYPE_MIXED = UInt(3);
alias XML_ELEMENT_TYPE_ELEMENT = UInt(4);

alias xmlElementTypeVal = UInt;

alias Struct__xmlRegexp = Opaque;

alias xmlRegexp = Struct__xmlRegexp;

alias xmlRegexpPtr = Pointer[xmlRegexp];

alias Struct__xmlRegExecCtxt = Opaque;

alias xmlRegExecCtxt = Struct__xmlRegExecCtxt;

alias xmlRegExecCtxtPtr = Pointer[xmlRegExecCtxt];

alias Struct__xmlDict = Opaque;

alias xmlDict = Struct__xmlDict;

alias xmlDictPtr = Pointer[xmlDict];

external (cdecl) xmlDictCreate() : xmlDictPtr;

external (cdecl) xmlDictCreateSub(arg0:xmlDictPtr) : xmlDictPtr;

external (cdecl) xmlDictReference(arg0:xmlDictPtr) : Int;

external (cdecl) xmlDictFree(arg0:xmlDictPtr) : ;

external (cdecl) xmlDictLookup(arg0:xmlDictPtr, arg1:Pointer[xmlChar], arg2:Int) : Pointer[xmlChar];

external (cdecl) xmlDictExists(arg0:xmlDictPtr, arg1:Pointer[xmlChar], arg2:Int) : Pointer[xmlChar];

external (cdecl) xmlDictQLookup(arg0:xmlDictPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlDictOwns(arg0:xmlDictPtr, arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlDictSize(arg0:xmlDictPtr) : Int;

external (cdecl) xmlDictCleanup() : ;

external (cdecl) xmlRegexpCompile(arg0:Pointer[xmlChar]) : xmlRegexpPtr;

external (cdecl) xmlRegFreeRegexp(arg0:xmlRegexpPtr) : ;

external (cdecl) xmlRegexpExec(arg0:xmlRegexpPtr, arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlRegexpPrint(arg0:Pointer[FILE], arg1:xmlRegexpPtr) : ;

external (cdecl) xmlRegexpIsDeterminist(arg0:xmlRegexpPtr) : Int;

alias xmlRegExecCallbacks = CCodePointer[[xmlRegExecCtxtPtr, Pointer[xmlChar], OpaquePointer, OpaquePointer],[]];

external (cdecl) xmlRegNewExecCtxt(arg0:xmlRegexpPtr, arg1:xmlRegExecCallbacks, arg2:OpaquePointer) : xmlRegExecCtxtPtr;

external (cdecl) xmlRegFreeExecCtxt(arg0:xmlRegExecCtxtPtr) : ;

external (cdecl) xmlRegExecPushString(arg0:xmlRegExecCtxtPtr, arg1:Pointer[xmlChar], arg2:OpaquePointer) : Int;

external (cdecl) xmlRegExecPushString2(arg0:xmlRegExecCtxtPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:OpaquePointer) : Int;

external (cdecl) xmlRegExecNextValues(arg0:xmlRegExecCtxtPtr, arg1:Pointer[Int], arg2:Pointer[Int], arg3:Pointer[Pointer[xmlChar]], arg4:Pointer[Int]) : Int;

external (cdecl) xmlRegExecErrInfo(arg0:xmlRegExecCtxtPtr, arg1:Pointer[Pointer[xmlChar]], arg2:Pointer[Int], arg3:Pointer[Int], arg4:Pointer[Pointer[xmlChar]], arg5:Pointer[Int]) : Int;

alias Struct__xmlExpCtxt = Opaque;

alias xmlExpCtxt = Struct__xmlExpCtxt;

alias xmlExpCtxtPtr = Pointer[xmlExpCtxt];

external (cdecl) xmlExpFreeCtxt(arg0:xmlExpCtxtPtr) : ;

external (cdecl) xmlExpNewCtxt(arg0:Int, arg1:xmlDictPtr) : xmlExpCtxtPtr;

external (cdecl) xmlExpCtxtNbNodes(arg0:xmlExpCtxtPtr) : Int;

external (cdecl) xmlExpCtxtNbCons(arg0:xmlExpCtxtPtr) : Int;

alias Struct__xmlExpNode = Opaque;

alias xmlExpNode = Struct__xmlExpNode;

alias xmlExpNodePtr = Pointer[xmlExpNode];

alias Enum_Unnamed8 = UInt;
alias XML_EXP_EMPTY = UInt(0);
alias XML_EXP_FORBID = UInt(1);
alias XML_EXP_ATOM = UInt(2);
alias XML_EXP_SEQ = UInt(3);
alias XML_EXP_OR = UInt(4);
alias XML_EXP_COUNT = UInt(5);

alias xmlExpNodeType = UInt;

external forbiddenExp : xmlExpNodePtr;

external emptyExp : xmlExpNodePtr;

external (cdecl) xmlExpFree(arg0:xmlExpCtxtPtr, arg1:xmlExpNodePtr) : ;

external (cdecl) xmlExpRef(arg0:xmlExpNodePtr) : ;

external (cdecl) xmlExpParse(arg0:xmlExpCtxtPtr, arg1:Pointer[CChar]) : xmlExpNodePtr;

external (cdecl) xmlExpNewAtom(arg0:xmlExpCtxtPtr, arg1:Pointer[xmlChar], arg2:Int) : xmlExpNodePtr;

external (cdecl) xmlExpNewOr(arg0:xmlExpCtxtPtr, arg1:xmlExpNodePtr, arg2:xmlExpNodePtr) : xmlExpNodePtr;

external (cdecl) xmlExpNewSeq(arg0:xmlExpCtxtPtr, arg1:xmlExpNodePtr, arg2:xmlExpNodePtr) : xmlExpNodePtr;

external (cdecl) xmlExpNewRange(arg0:xmlExpCtxtPtr, arg1:xmlExpNodePtr, arg2:Int, arg3:Int) : xmlExpNodePtr;

external (cdecl) xmlExpIsNillable(arg0:xmlExpNodePtr) : Int;

external (cdecl) xmlExpMaxToken(arg0:xmlExpNodePtr) : Int;

external (cdecl) xmlExpGetLanguage(arg0:xmlExpCtxtPtr, arg1:xmlExpNodePtr, arg2:Pointer[Pointer[xmlChar]], arg3:Int) : Int;

external (cdecl) xmlExpGetStart(arg0:xmlExpCtxtPtr, arg1:xmlExpNodePtr, arg2:Pointer[Pointer[xmlChar]], arg3:Int) : Int;

external (cdecl) xmlExpStringDerive(arg0:xmlExpCtxtPtr, arg1:xmlExpNodePtr, arg2:Pointer[xmlChar], arg3:Int) : xmlExpNodePtr;

external (cdecl) xmlExpExpDerive(arg0:xmlExpCtxtPtr, arg1:xmlExpNodePtr, arg2:xmlExpNodePtr) : xmlExpNodePtr;

external (cdecl) xmlExpSubsume(arg0:xmlExpCtxtPtr, arg1:xmlExpNodePtr, arg2:xmlExpNodePtr) : Int;

external (cdecl) xmlExpDump(arg0:xmlBufferPtr, arg1:xmlExpNodePtr) : ;

alias xmlElement = Struct__xmlElement;

alias xmlElementPtr = Pointer[xmlElement];

record Struct__xmlElement (
    _private : OpaquePointer,
    type : xmlElementType,
    name : Pointer[xmlChar],
    children : Pointer[Struct__xmlNode],
    last : Pointer[Struct__xmlNode],
    parent : Pointer[Struct__xmlDtd],
    next : Pointer[Struct__xmlNode],
    prev : Pointer[Struct__xmlNode],
    doc : Pointer[Struct__xmlDoc],
    etype : xmlElementTypeVal,
    content : xmlElementContentPtr,
    attributes : xmlAttributePtr,
    prefix : Pointer[xmlChar],
    contModel : xmlRegexpPtr,
);

alias xmlNsType = xmlElementType;

alias xmlNs = Struct__xmlNs;

alias xmlNsPtr = Pointer[xmlNs];

record Struct__xmlNs (
    next : Pointer[Struct__xmlNs],
    type : xmlNsType,
    href : Pointer[xmlChar],
    prefix : Pointer[xmlChar],
    _private : OpaquePointer,
    context : Pointer[Struct__xmlDoc],
);

alias xmlDtd = Struct__xmlDtd;

alias xmlDtdPtr = Pointer[xmlDtd];

record Struct__xmlDtd (
    _private : OpaquePointer,
    type : xmlElementType,
    name : Pointer[xmlChar],
    children : Pointer[Struct__xmlNode],
    last : Pointer[Struct__xmlNode],
    parent : Pointer[Struct__xmlDoc],
    next : Pointer[Struct__xmlNode],
    prev : Pointer[Struct__xmlNode],
    doc : Pointer[Struct__xmlDoc],
    notations : OpaquePointer,
    elements : OpaquePointer,
    attributes : OpaquePointer,
    entities : OpaquePointer,
    ExternalID : Pointer[xmlChar],
    SystemID : Pointer[xmlChar],
    pentities : OpaquePointer,
);

alias xmlAttr = Struct__xmlAttr;

alias xmlAttrPtr = Pointer[xmlAttr];

record Struct__xmlAttr (
    _private : OpaquePointer,
    type : xmlElementType,
    name : Pointer[xmlChar],
    children : Pointer[Struct__xmlNode],
    last : Pointer[Struct__xmlNode],
    parent : Pointer[Struct__xmlNode],
    next : Pointer[Struct__xmlAttr],
    prev : Pointer[Struct__xmlAttr],
    doc : Pointer[Struct__xmlDoc],
    ns : Pointer[xmlNs],
    atype : xmlAttributeType,
    psvi : OpaquePointer,
);

alias xmlID = Struct__xmlID;

alias xmlIDPtr = Pointer[xmlID];

record Struct__xmlID (
    next : Pointer[Struct__xmlID],
    value : Pointer[xmlChar],
    attr : xmlAttrPtr,
    name : Pointer[xmlChar],
    lineno : Int,
    doc : Pointer[Struct__xmlDoc],
);

alias xmlRef = Struct__xmlRef;

alias xmlRefPtr = Pointer[xmlRef];

record Struct__xmlRef (
    next : Pointer[Struct__xmlRef],
    value : Pointer[xmlChar],
    attr : xmlAttrPtr,
    name : Pointer[xmlChar],
    lineno : Int,
);

alias xmlNode = Struct__xmlNode;

alias xmlNodePtr = Pointer[xmlNode];

record Struct__xmlNode (
    _private : OpaquePointer,
    type : xmlElementType,
    name : Pointer[xmlChar],
    children : Pointer[Struct__xmlNode],
    last : Pointer[Struct__xmlNode],
    parent : Pointer[Struct__xmlNode],
    next : Pointer[Struct__xmlNode],
    prev : Pointer[Struct__xmlNode],
    doc : Pointer[Struct__xmlDoc],
    ns : Pointer[xmlNs],
    content : Pointer[xmlChar],
    properties : Pointer[Struct__xmlAttr],
    nsDef : Pointer[xmlNs],
    psvi : OpaquePointer,
    line : UShort,
    extra : UShort,
);

alias Enum_Unnamed9 = UInt;
alias XML_DOC_WELLFORMED = UInt(1);
alias XML_DOC_NSVALID = UInt(2);
alias XML_DOC_OLD10 = UInt(4);
alias XML_DOC_DTDVALID = UInt(8);
alias XML_DOC_XINCLUDE = UInt(16);
alias XML_DOC_USERBUILT = UInt(32);
alias XML_DOC_INTERNAL = UInt(64);
alias XML_DOC_HTML = UInt(128);

alias xmlDocProperties = UInt;

alias xmlDoc = Struct__xmlDoc;

alias xmlDocPtr = Pointer[xmlDoc];

record Struct__xmlDoc (
    _private : OpaquePointer,
    type : xmlElementType,
    name : Pointer[CChar],
    children : Pointer[Struct__xmlNode],
    last : Pointer[Struct__xmlNode],
    parent : Pointer[Struct__xmlNode],
    next : Pointer[Struct__xmlNode],
    prev : Pointer[Struct__xmlNode],
    doc : Pointer[Struct__xmlDoc],
    compression : Int,
    standalone : Int,
    intSubset : Pointer[Struct__xmlDtd],
    extSubset : Pointer[Struct__xmlDtd],
    oldNs : Pointer[Struct__xmlNs],
    version : Pointer[xmlChar],
    encoding : Pointer[xmlChar],
    ids : OpaquePointer,
    refs : OpaquePointer,
    URL : Pointer[xmlChar],
    charset : Int,
    dict : Pointer[Struct__xmlDict],
    psvi : OpaquePointer,
    parseFlags : Int,
    properties : Int,
);

alias xmlDOMWrapCtxt = Struct__xmlDOMWrapCtxt;

alias xmlDOMWrapCtxtPtr = Pointer[xmlDOMWrapCtxt];

alias xmlDOMWrapAcquireNsFunction = CCodePointer[[xmlDOMWrapCtxtPtr, xmlNodePtr, Pointer[xmlChar], Pointer[xmlChar]],[xmlNsPtr]];

record Struct__xmlDOMWrapCtxt (
    _private : OpaquePointer,
    type : Int,
    namespaceMap : OpaquePointer,
    getNsForNodeFunc : xmlDOMWrapAcquireNsFunction,
);

external (cdecl) xmlValidateNCName(arg0:Pointer[xmlChar], arg1:Int) : Int;

external (cdecl) xmlValidateQName(arg0:Pointer[xmlChar], arg1:Int) : Int;

external (cdecl) xmlValidateName(arg0:Pointer[xmlChar], arg1:Int) : Int;

external (cdecl) xmlValidateNMToken(arg0:Pointer[xmlChar], arg1:Int) : Int;

external (cdecl) xmlBuildQName(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Int) : Pointer[xmlChar];

external (cdecl) xmlSplitQName2(arg0:Pointer[xmlChar], arg1:Pointer[Pointer[xmlChar]]) : Pointer[xmlChar];

external (cdecl) xmlSplitQName3(arg0:Pointer[xmlChar], arg1:Pointer[Int]) : Pointer[xmlChar];

external (cdecl) xmlSetBufferAllocationScheme(arg0:xmlBufferAllocationScheme) : ;

external (cdecl) xmlGetBufferAllocationScheme() : xmlBufferAllocationScheme;

external (cdecl) xmlBufferCreate() : xmlBufferPtr;

external (cdecl) xmlBufferCreateSize(arg0:size_t) : xmlBufferPtr;

external (cdecl) xmlBufferCreateStatic(arg0:OpaquePointer, arg1:size_t) : xmlBufferPtr;

external (cdecl) xmlBufferResize(arg0:xmlBufferPtr, arg1:UInt) : Int;

external (cdecl) xmlBufferFree(arg0:xmlBufferPtr) : ;

external (cdecl) xmlBufferDump(arg0:Pointer[FILE], arg1:xmlBufferPtr) : Int;

external (cdecl) xmlBufferAdd(arg0:xmlBufferPtr, arg1:Pointer[xmlChar], arg2:Int) : Int;

external (cdecl) xmlBufferAddHead(arg0:xmlBufferPtr, arg1:Pointer[xmlChar], arg2:Int) : Int;

external (cdecl) xmlBufferCat(arg0:xmlBufferPtr, arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlBufferCCat(arg0:xmlBufferPtr, arg1:Pointer[CChar]) : Int;

external (cdecl) xmlBufferShrink(arg0:xmlBufferPtr, arg1:UInt) : Int;

external (cdecl) xmlBufferGrow(arg0:xmlBufferPtr, arg1:UInt) : Int;

external (cdecl) xmlBufferEmpty(arg0:xmlBufferPtr) : ;

external (cdecl) xmlBufferContent(arg0:xmlBufferPtr) : Pointer[xmlChar];

external (cdecl) xmlBufferSetAllocationScheme(arg0:xmlBufferPtr, arg1:xmlBufferAllocationScheme) : ;

external (cdecl) xmlBufferLength(arg0:xmlBufferPtr) : Int;

external (cdecl) xmlCreateIntSubset(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlDtdPtr;

external (cdecl) xmlNewDtd(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlDtdPtr;

external (cdecl) xmlGetIntSubset(arg0:xmlDocPtr) : xmlDtdPtr;

external (cdecl) xmlFreeDtd(arg0:xmlDtdPtr) : ;

external (cdecl) xmlNewGlobalNs(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlNsPtr;

external (cdecl) xmlNewNs(arg0:xmlNodePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlNsPtr;

external (cdecl) xmlFreeNs(arg0:xmlNsPtr) : ;

external (cdecl) xmlFreeNsList(arg0:xmlNsPtr) : ;

external (cdecl) xmlNewDoc(arg0:Pointer[xmlChar]) : xmlDocPtr;

external (cdecl) xmlFreeDoc(arg0:xmlDocPtr) : ;

external (cdecl) xmlNewDocProp(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlAttrPtr;

external (cdecl) xmlNewProp(arg0:xmlNodePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlAttrPtr;

external (cdecl) xmlNewNsProp(arg0:xmlNodePtr, arg1:xmlNsPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlAttrPtr;

external (cdecl) xmlNewNsPropEatName(arg0:xmlNodePtr, arg1:xmlNsPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlAttrPtr;

external (cdecl) xmlFreePropList(arg0:xmlAttrPtr) : ;

external (cdecl) xmlFreeProp(arg0:xmlAttrPtr) : ;

external (cdecl) xmlCopyProp(arg0:xmlNodePtr, arg1:xmlAttrPtr) : xmlAttrPtr;

external (cdecl) xmlCopyPropList(arg0:xmlNodePtr, arg1:xmlAttrPtr) : xmlAttrPtr;

external (cdecl) xmlCopyDtd(arg0:xmlDtdPtr) : xmlDtdPtr;

external (cdecl) xmlCopyDoc(arg0:xmlDocPtr, arg1:Int) : xmlDocPtr;

external (cdecl) xmlNewDocNode(arg0:xmlDocPtr, arg1:xmlNsPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewDocNodeEatName(arg0:xmlDocPtr, arg1:xmlNsPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewNode(arg0:xmlNsPtr, arg1:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewNodeEatName(arg0:xmlNsPtr, arg1:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewChild(arg0:xmlNodePtr, arg1:xmlNsPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewDocText(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewText(arg0:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewDocPI(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewPI(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewDocTextLen(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Int) : xmlNodePtr;

external (cdecl) xmlNewTextLen(arg0:Pointer[xmlChar], arg1:Int) : xmlNodePtr;

external (cdecl) xmlNewDocComment(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewComment(arg0:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewCDataBlock(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Int) : xmlNodePtr;

external (cdecl) xmlNewCharRef(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewReference(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlCopyNode(arg0:xmlNodePtr, arg1:Int) : xmlNodePtr;

external (cdecl) xmlDocCopyNode(arg0:xmlNodePtr, arg1:xmlDocPtr, arg2:Int) : xmlNodePtr;

external (cdecl) xmlDocCopyNodeList(arg0:xmlDocPtr, arg1:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlCopyNodeList(arg0:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlNewTextChild(arg0:xmlNodePtr, arg1:xmlNsPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewDocRawNode(arg0:xmlDocPtr, arg1:xmlNsPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlNewDocFragment(arg0:xmlDocPtr) : xmlNodePtr;

external (cdecl) xmlGetLineNo(arg0:xmlNodePtr) : CLong;

external (cdecl) xmlGetNodePath(arg0:xmlNodePtr) : Pointer[xmlChar];

external (cdecl) xmlDocGetRootElement(arg0:xmlDocPtr) : xmlNodePtr;

external (cdecl) xmlGetLastChild(arg0:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlNodeIsText(arg0:xmlNodePtr) : Int;

external (cdecl) xmlIsBlankNode(arg0:xmlNodePtr) : Int;

external (cdecl) xmlDocSetRootElement(arg0:xmlDocPtr, arg1:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlNodeSetName(arg0:xmlNodePtr, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlAddChild(arg0:xmlNodePtr, arg1:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlAddChildList(arg0:xmlNodePtr, arg1:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlReplaceNode(arg0:xmlNodePtr, arg1:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlAddPrevSibling(arg0:xmlNodePtr, arg1:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlAddSibling(arg0:xmlNodePtr, arg1:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlAddNextSibling(arg0:xmlNodePtr, arg1:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlUnlinkNode(arg0:xmlNodePtr) : ;

external (cdecl) xmlTextMerge(arg0:xmlNodePtr, arg1:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlTextConcat(arg0:xmlNodePtr, arg1:Pointer[xmlChar], arg2:Int) : Int;

external (cdecl) xmlFreeNodeList(arg0:xmlNodePtr) : ;

external (cdecl) xmlFreeNode(arg0:xmlNodePtr) : ;

external (cdecl) xmlSetTreeDoc(arg0:xmlNodePtr, arg1:xmlDocPtr) : ;

external (cdecl) xmlSetListDoc(arg0:xmlNodePtr, arg1:xmlDocPtr) : ;

external (cdecl) xmlSearchNs(arg0:xmlDocPtr, arg1:xmlNodePtr, arg2:Pointer[xmlChar]) : xmlNsPtr;

external (cdecl) xmlSearchNsByHref(arg0:xmlDocPtr, arg1:xmlNodePtr, arg2:Pointer[xmlChar]) : xmlNsPtr;

external (cdecl) xmlGetNsList(arg0:xmlDocPtr, arg1:xmlNodePtr) : Pointer[xmlNsPtr];

external (cdecl) xmlSetNs(arg0:xmlNodePtr, arg1:xmlNsPtr) : ;

external (cdecl) xmlCopyNamespace(arg0:xmlNsPtr) : xmlNsPtr;

external (cdecl) xmlCopyNamespaceList(arg0:xmlNsPtr) : xmlNsPtr;

external (cdecl) xmlSetProp(arg0:xmlNodePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlAttrPtr;

external (cdecl) xmlSetNsProp(arg0:xmlNodePtr, arg1:xmlNsPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlAttrPtr;

external (cdecl) xmlGetNoNsProp(arg0:xmlNodePtr, arg1:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlGetProp(arg0:xmlNodePtr, arg1:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlHasProp(arg0:xmlNodePtr, arg1:Pointer[xmlChar]) : xmlAttrPtr;

external (cdecl) xmlHasNsProp(arg0:xmlNodePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlAttrPtr;

external (cdecl) xmlGetNsProp(arg0:xmlNodePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlStringGetNodeList(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlNodePtr;

external (cdecl) xmlStringLenGetNodeList(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Int) : xmlNodePtr;

external (cdecl) xmlNodeListGetString(arg0:xmlDocPtr, arg1:xmlNodePtr, arg2:Int) : Pointer[xmlChar];

external (cdecl) xmlNodeListGetRawString(arg0:xmlDocPtr, arg1:xmlNodePtr, arg2:Int) : Pointer[xmlChar];

external (cdecl) xmlNodeSetContent(arg0:xmlNodePtr, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlNodeSetContentLen(arg0:xmlNodePtr, arg1:Pointer[xmlChar], arg2:Int) : ;

external (cdecl) xmlNodeAddContent(arg0:xmlNodePtr, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlNodeAddContentLen(arg0:xmlNodePtr, arg1:Pointer[xmlChar], arg2:Int) : ;

external (cdecl) xmlNodeGetContent(arg0:xmlNodePtr) : Pointer[xmlChar];

external (cdecl) xmlNodeBufGetContent(arg0:xmlBufferPtr, arg1:xmlNodePtr) : Int;

external (cdecl) xmlNodeGetLang(arg0:xmlNodePtr) : Pointer[xmlChar];

external (cdecl) xmlNodeGetSpacePreserve(arg0:xmlNodePtr) : Int;

external (cdecl) xmlNodeSetLang(arg0:xmlNodePtr, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlNodeSetSpacePreserve(arg0:xmlNodePtr, arg1:Int) : ;

external (cdecl) xmlNodeGetBase(arg0:xmlDocPtr, arg1:xmlNodePtr) : Pointer[xmlChar];

external (cdecl) xmlNodeSetBase(arg0:xmlNodePtr, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlRemoveProp(arg0:xmlAttrPtr) : Int;

external (cdecl) xmlUnsetNsProp(arg0:xmlNodePtr, arg1:xmlNsPtr, arg2:Pointer[xmlChar]) : Int;

external (cdecl) xmlUnsetProp(arg0:xmlNodePtr, arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlBufferWriteCHAR(arg0:xmlBufferPtr, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlBufferWriteChar(arg0:xmlBufferPtr, arg1:Pointer[CChar]) : ;

external (cdecl) xmlBufferWriteQuotedString(arg0:xmlBufferPtr, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlAttrSerializeTxtContent(arg0:xmlBufferPtr, arg1:xmlDocPtr, arg2:xmlAttrPtr, arg3:Pointer[xmlChar]) : ;

external (cdecl) xmlReconciliateNs(arg0:xmlDocPtr, arg1:xmlNodePtr) : Int;

external (cdecl) xmlDocDumpFormatMemory(arg0:xmlDocPtr, arg1:Pointer[Pointer[xmlChar]], arg2:Pointer[Int], arg3:Int) : ;

external (cdecl) xmlDocDumpMemory(arg0:xmlDocPtr, arg1:Pointer[Pointer[xmlChar]], arg2:Pointer[Int]) : ;

external (cdecl) xmlDocDumpMemoryEnc(arg0:xmlDocPtr, arg1:Pointer[Pointer[xmlChar]], arg2:Pointer[Int], arg3:Pointer[CChar]) : ;

external (cdecl) xmlDocDumpFormatMemoryEnc(arg0:xmlDocPtr, arg1:Pointer[Pointer[xmlChar]], arg2:Pointer[Int], arg3:Pointer[CChar], arg4:Int) : ;

external (cdecl) xmlDocFormatDump(arg0:Pointer[FILE], arg1:xmlDocPtr, arg2:Int) : Int;

external (cdecl) xmlDocDump(arg0:Pointer[FILE], arg1:xmlDocPtr) : Int;

external (cdecl) xmlElemDump(arg0:Pointer[FILE], arg1:xmlDocPtr, arg2:xmlNodePtr) : ;

external (cdecl) xmlSaveFile(arg0:Pointer[CChar], arg1:xmlDocPtr) : Int;

external (cdecl) xmlSaveFormatFile(arg0:Pointer[CChar], arg1:xmlDocPtr, arg2:Int) : Int;

external (cdecl) xmlNodeDump(arg0:xmlBufferPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:Int, arg4:Int) : Int;

external (cdecl) xmlSaveFileTo(arg0:xmlOutputBufferPtr, arg1:xmlDocPtr, arg2:Pointer[CChar]) : Int;

external (cdecl) xmlSaveFormatFileTo(arg0:xmlOutputBufferPtr, arg1:xmlDocPtr, arg2:Pointer[CChar], arg3:Int) : Int;

external (cdecl) xmlNodeDumpOutput(arg0:xmlOutputBufferPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:Int, arg4:Int, arg5:Pointer[CChar]) : ;

external (cdecl) xmlSaveFormatFileEnc(arg0:Pointer[CChar], arg1:xmlDocPtr, arg2:Pointer[CChar], arg3:Int) : Int;

external (cdecl) xmlSaveFileEnc(arg0:Pointer[CChar], arg1:xmlDocPtr, arg2:Pointer[CChar]) : Int;

external (cdecl) xmlIsXHTML(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlGetDocCompressMode(arg0:xmlDocPtr) : Int;

external (cdecl) xmlSetDocCompressMode(arg0:xmlDocPtr, arg1:Int) : ;

external (cdecl) xmlGetCompressMode() : Int;

external (cdecl) xmlSetCompressMode(arg0:Int) : ;

external (cdecl) xmlDOMWrapNewCtxt() : xmlDOMWrapCtxtPtr;

external (cdecl) xmlDOMWrapFreeCtxt(arg0:xmlDOMWrapCtxtPtr) : ;

external (cdecl) xmlDOMWrapReconcileNamespaces(arg0:xmlDOMWrapCtxtPtr, arg1:xmlNodePtr, arg2:Int) : Int;

external (cdecl) xmlDOMWrapAdoptNode(arg0:xmlDOMWrapCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:xmlDocPtr, arg4:xmlNodePtr, arg5:Int) : Int;

external (cdecl) xmlDOMWrapRemoveNode(arg0:xmlDOMWrapCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:Int) : Int;

external (cdecl) xmlDOMWrapCloneNode(arg0:xmlDOMWrapCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:Pointer[xmlNodePtr], arg4:xmlDocPtr, arg5:xmlNodePtr, arg6:Int, arg7:Int) : Int;

external (cdecl) xmlChildElementCount(arg0:xmlNodePtr) : CULong;

external (cdecl) xmlNextElementSibling(arg0:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlFirstElementChild(arg0:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlLastElementChild(arg0:xmlNodePtr) : xmlNodePtr;

external (cdecl) xmlPreviousElementSibling(arg0:xmlNodePtr) : xmlNodePtr;

alias Struct__xmlHashTable = Opaque;

alias xmlHashTable = Struct__xmlHashTable;

alias xmlHashTablePtr = Pointer[xmlHashTable];

alias xmlHashDeallocator = CCodePointer[[OpaquePointer, Pointer[xmlChar]],[]];

alias xmlHashCopier = CCodePointer[[OpaquePointer, Pointer[xmlChar]],[OpaquePointer]];

alias xmlHashScanner = CCodePointer[[OpaquePointer, OpaquePointer, Pointer[xmlChar]],[]];

alias xmlHashScannerFull = CCodePointer[[OpaquePointer, OpaquePointer, Pointer[xmlChar], Pointer[xmlChar], Pointer[xmlChar]],[]];

external (cdecl) xmlHashCreate(arg0:Int) : xmlHashTablePtr;

external (cdecl) xmlHashCreateDict(arg0:Int, arg1:xmlDictPtr) : xmlHashTablePtr;

external (cdecl) xmlHashFree(arg0:xmlHashTablePtr, arg1:xmlHashDeallocator) : ;

external (cdecl) xmlHashAddEntry(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:OpaquePointer) : Int;

external (cdecl) xmlHashUpdateEntry(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:OpaquePointer, arg3:xmlHashDeallocator) : Int;

external (cdecl) xmlHashAddEntry2(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:OpaquePointer) : Int;

external (cdecl) xmlHashUpdateEntry2(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:OpaquePointer, arg4:xmlHashDeallocator) : Int;

external (cdecl) xmlHashAddEntry3(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:OpaquePointer) : Int;

external (cdecl) xmlHashUpdateEntry3(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:OpaquePointer, arg5:xmlHashDeallocator) : Int;

external (cdecl) xmlHashRemoveEntry(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:xmlHashDeallocator) : Int;

external (cdecl) xmlHashRemoveEntry2(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:xmlHashDeallocator) : Int;

external (cdecl) xmlHashRemoveEntry3(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:xmlHashDeallocator) : Int;

external (cdecl) xmlHashLookup(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar]) : OpaquePointer;

external (cdecl) xmlHashLookup2(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : OpaquePointer;

external (cdecl) xmlHashLookup3(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : OpaquePointer;

external (cdecl) xmlHashQLookup(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : OpaquePointer;

external (cdecl) xmlHashQLookup2(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:Pointer[xmlChar]) : OpaquePointer;

external (cdecl) xmlHashQLookup3(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:Pointer[xmlChar], arg6:Pointer[xmlChar]) : OpaquePointer;

external (cdecl) xmlHashCopy(arg0:xmlHashTablePtr, arg1:xmlHashCopier) : xmlHashTablePtr;

external (cdecl) xmlHashSize(arg0:xmlHashTablePtr) : Int;

external (cdecl) xmlHashScan(arg0:xmlHashTablePtr, arg1:xmlHashScanner, arg2:OpaquePointer) : ;

external (cdecl) xmlHashScan3(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:xmlHashScanner, arg5:OpaquePointer) : ;

external (cdecl) xmlHashScanFull(arg0:xmlHashTablePtr, arg1:xmlHashScannerFull, arg2:OpaquePointer) : ;

external (cdecl) xmlHashScanFull3(arg0:xmlHashTablePtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:xmlHashScannerFull, arg5:OpaquePointer) : ;

alias Enum_Unnamed10 = UInt;
alias XML_ERR_NONE = UInt(0);
alias XML_ERR_WARNING = UInt(1);
alias XML_ERR_ERROR = UInt(2);
alias XML_ERR_FATAL = UInt(3);

alias xmlErrorLevel = UInt;

alias Enum_Unnamed11 = UInt;
alias XML_FROM_NONE = UInt(0);
alias XML_FROM_PARSER = UInt(1);
alias XML_FROM_TREE = UInt(2);
alias XML_FROM_NAMESPACE = UInt(3);
alias XML_FROM_DTD = UInt(4);
alias XML_FROM_HTML = UInt(5);
alias XML_FROM_MEMORY = UInt(6);
alias XML_FROM_OUTPUT = UInt(7);
alias XML_FROM_IO = UInt(8);
alias XML_FROM_FTP = UInt(9);
alias XML_FROM_HTTP = UInt(10);
alias XML_FROM_XINCLUDE = UInt(11);
alias XML_FROM_XPATH = UInt(12);
alias XML_FROM_XPOINTER = UInt(13);
alias XML_FROM_REGEXP = UInt(14);
alias XML_FROM_DATATYPE = UInt(15);
alias XML_FROM_SCHEMASP = UInt(16);
alias XML_FROM_SCHEMASV = UInt(17);
alias XML_FROM_RELAXNGP = UInt(18);
alias XML_FROM_RELAXNGV = UInt(19);
alias XML_FROM_CATALOG = UInt(20);
alias XML_FROM_C14N = UInt(21);
alias XML_FROM_XSLT = UInt(22);
alias XML_FROM_VALID = UInt(23);
alias XML_FROM_CHECK = UInt(24);
alias XML_FROM_WRITER = UInt(25);
alias XML_FROM_MODULE = UInt(26);
alias XML_FROM_I18N = UInt(27);
alias XML_FROM_SCHEMATRONV = UInt(28);

alias xmlErrorDomain = UInt;

alias xmlError = Struct__xmlError;

alias xmlErrorPtr = Pointer[xmlError];

record Struct__xmlError (
    domain : Int,
    code : Int,
    message : Pointer[CChar],
    level : xmlErrorLevel,
    file : Pointer[CChar],
    line : Int,
    str1 : Pointer[CChar],
    str2 : Pointer[CChar],
    str3 : Pointer[CChar],
    int1 : Int,
    int2 : Int,
    ctxt : OpaquePointer,
    node : OpaquePointer,
);

alias Enum_Unnamed12 = UInt;
alias XML_ERR_OK = UInt(0);
alias XML_ERR_INTERNAL_ERROR = UInt(1);
alias XML_ERR_NO_MEMORY = UInt(2);
alias XML_ERR_DOCUMENT_START = UInt(3);
alias XML_ERR_DOCUMENT_EMPTY = UInt(4);
alias XML_ERR_DOCUMENT_END = UInt(5);
alias XML_ERR_INVALID_HEX_CHARREF = UInt(6);
alias XML_ERR_INVALID_DEC_CHARREF = UInt(7);
alias XML_ERR_INVALID_CHARREF = UInt(8);
alias XML_ERR_INVALID_CHAR = UInt(9);
alias XML_ERR_CHARREF_AT_EOF = UInt(10);
alias XML_ERR_CHARREF_IN_PROLOG = UInt(11);
alias XML_ERR_CHARREF_IN_EPILOG = UInt(12);
alias XML_ERR_CHARREF_IN_DTD = UInt(13);
alias XML_ERR_ENTITYREF_AT_EOF = UInt(14);
alias XML_ERR_ENTITYREF_IN_PROLOG = UInt(15);
alias XML_ERR_ENTITYREF_IN_EPILOG = UInt(16);
alias XML_ERR_ENTITYREF_IN_DTD = UInt(17);
alias XML_ERR_PEREF_AT_EOF = UInt(18);
alias XML_ERR_PEREF_IN_PROLOG = UInt(19);
alias XML_ERR_PEREF_IN_EPILOG = UInt(20);
alias XML_ERR_PEREF_IN_INT_SUBSET = UInt(21);
alias XML_ERR_ENTITYREF_NO_NAME = UInt(22);
alias XML_ERR_ENTITYREF_SEMICOL_MISSING = UInt(23);
alias XML_ERR_PEREF_NO_NAME = UInt(24);
alias XML_ERR_PEREF_SEMICOL_MISSING = UInt(25);
alias XML_ERR_UNDECLARED_ENTITY = UInt(26);
alias XML_WAR_UNDECLARED_ENTITY = UInt(27);
alias XML_ERR_UNPARSED_ENTITY = UInt(28);
alias XML_ERR_ENTITY_IS_EXTERNAL = UInt(29);
alias XML_ERR_ENTITY_IS_PARAMETER = UInt(30);
alias XML_ERR_UNKNOWN_ENCODING = UInt(31);
alias XML_ERR_UNSUPPORTED_ENCODING = UInt(32);
alias XML_ERR_STRING_NOT_STARTED = UInt(33);
alias XML_ERR_STRING_NOT_CLOSED = UInt(34);
alias XML_ERR_NS_DECL_ERROR = UInt(35);
alias XML_ERR_ENTITY_NOT_STARTED = UInt(36);
alias XML_ERR_ENTITY_NOT_FINISHED = UInt(37);
alias XML_ERR_LT_IN_ATTRIBUTE = UInt(38);
alias XML_ERR_ATTRIBUTE_NOT_STARTED = UInt(39);
alias XML_ERR_ATTRIBUTE_NOT_FINISHED = UInt(40);
alias XML_ERR_ATTRIBUTE_WITHOUT_VALUE = UInt(41);
alias XML_ERR_ATTRIBUTE_REDEFINED = UInt(42);
alias XML_ERR_LITERAL_NOT_STARTED = UInt(43);
alias XML_ERR_LITERAL_NOT_FINISHED = UInt(44);
alias XML_ERR_COMMENT_NOT_FINISHED = UInt(45);
alias XML_ERR_PI_NOT_STARTED = UInt(46);
alias XML_ERR_PI_NOT_FINISHED = UInt(47);
alias XML_ERR_NOTATION_NOT_STARTED = UInt(48);
alias XML_ERR_NOTATION_NOT_FINISHED = UInt(49);
alias XML_ERR_ATTLIST_NOT_STARTED = UInt(50);
alias XML_ERR_ATTLIST_NOT_FINISHED = UInt(51);
alias XML_ERR_MIXED_NOT_STARTED = UInt(52);
alias XML_ERR_MIXED_NOT_FINISHED = UInt(53);
alias XML_ERR_ELEMCONTENT_NOT_STARTED = UInt(54);
alias XML_ERR_ELEMCONTENT_NOT_FINISHED = UInt(55);
alias XML_ERR_XMLDECL_NOT_STARTED = UInt(56);
alias XML_ERR_XMLDECL_NOT_FINISHED = UInt(57);
alias XML_ERR_CONDSEC_NOT_STARTED = UInt(58);
alias XML_ERR_CONDSEC_NOT_FINISHED = UInt(59);
alias XML_ERR_EXT_SUBSET_NOT_FINISHED = UInt(60);
alias XML_ERR_DOCTYPE_NOT_FINISHED = UInt(61);
alias XML_ERR_MISPLACED_CDATA_END = UInt(62);
alias XML_ERR_CDATA_NOT_FINISHED = UInt(63);
alias XML_ERR_RESERVED_XML_NAME = UInt(64);
alias XML_ERR_SPACE_REQUIRED = UInt(65);
alias XML_ERR_SEPARATOR_REQUIRED = UInt(66);
alias XML_ERR_NMTOKEN_REQUIRED = UInt(67);
alias XML_ERR_NAME_REQUIRED = UInt(68);
alias XML_ERR_PCDATA_REQUIRED = UInt(69);
alias XML_ERR_URI_REQUIRED = UInt(70);
alias XML_ERR_PUBID_REQUIRED = UInt(71);
alias XML_ERR_LT_REQUIRED = UInt(72);
alias XML_ERR_GT_REQUIRED = UInt(73);
alias XML_ERR_LTSLASH_REQUIRED = UInt(74);
alias XML_ERR_EQUAL_REQUIRED = UInt(75);
alias XML_ERR_TAG_NAME_MISMATCH = UInt(76);
alias XML_ERR_TAG_NOT_FINISHED = UInt(77);
alias XML_ERR_STANDALONE_VALUE = UInt(78);
alias XML_ERR_ENCODING_NAME = UInt(79);
alias XML_ERR_HYPHEN_IN_COMMENT = UInt(80);
alias XML_ERR_INVALID_ENCODING = UInt(81);
alias XML_ERR_EXT_ENTITY_STANDALONE = UInt(82);
alias XML_ERR_CONDSEC_INVALID = UInt(83);
alias XML_ERR_VALUE_REQUIRED = UInt(84);
alias XML_ERR_NOT_WELL_BALANCED = UInt(85);
alias XML_ERR_EXTRA_CONTENT = UInt(86);
alias XML_ERR_ENTITY_CHAR_ERROR = UInt(87);
alias XML_ERR_ENTITY_PE_INTERNAL = UInt(88);
alias XML_ERR_ENTITY_LOOP = UInt(89);
alias XML_ERR_ENTITY_BOUNDARY = UInt(90);
alias XML_ERR_INVALID_URI = UInt(91);
alias XML_ERR_URI_FRAGMENT = UInt(92);
alias XML_WAR_CATALOG_PI = UInt(93);
alias XML_ERR_NO_DTD = UInt(94);
alias XML_ERR_CONDSEC_INVALID_KEYWORD = UInt(95);
alias XML_ERR_VERSION_MISSING = UInt(96);
alias XML_WAR_UNKNOWN_VERSION = UInt(97);
alias XML_WAR_LANG_VALUE = UInt(98);
alias XML_WAR_NS_URI = UInt(99);
alias XML_WAR_NS_URI_RELATIVE = UInt(100);
alias XML_ERR_MISSING_ENCODING = UInt(101);
alias XML_WAR_SPACE_VALUE = UInt(102);
alias XML_ERR_NOT_STANDALONE = UInt(103);
alias XML_ERR_ENTITY_PROCESSING = UInt(104);
alias XML_ERR_NOTATION_PROCESSING = UInt(105);
alias XML_WAR_NS_COLUMN = UInt(106);
alias XML_WAR_ENTITY_REDEFINED = UInt(107);
alias XML_ERR_UNKNOWN_VERSION = UInt(108);
alias XML_ERR_VERSION_MISMATCH = UInt(109);
alias XML_NS_ERR_XML_NAMESPACE = UInt(200);
alias XML_NS_ERR_UNDEFINED_NAMESPACE = UInt(201);
alias XML_NS_ERR_QNAME = UInt(202);
alias XML_NS_ERR_ATTRIBUTE_REDEFINED = UInt(203);
alias XML_NS_ERR_EMPTY = UInt(204);
alias XML_NS_ERR_COLON = UInt(205);
alias XML_DTD_ATTRIBUTE_DEFAULT = UInt(500);
alias XML_DTD_ATTRIBUTE_REDEFINED = UInt(501);
alias XML_DTD_ATTRIBUTE_VALUE = UInt(502);
alias XML_DTD_CONTENT_ERROR = UInt(503);
alias XML_DTD_CONTENT_MODEL = UInt(504);
alias XML_DTD_CONTENT_NOT_DETERMINIST = UInt(505);
alias XML_DTD_DIFFERENT_PREFIX = UInt(506);
alias XML_DTD_ELEM_DEFAULT_NAMESPACE = UInt(507);
alias XML_DTD_ELEM_NAMESPACE = UInt(508);
alias XML_DTD_ELEM_REDEFINED = UInt(509);
alias XML_DTD_EMPTY_NOTATION = UInt(510);
alias XML_DTD_ENTITY_TYPE = UInt(511);
alias XML_DTD_ID_FIXED = UInt(512);
alias XML_DTD_ID_REDEFINED = UInt(513);
alias XML_DTD_ID_SUBSET = UInt(514);
alias XML_DTD_INVALID_CHILD = UInt(515);
alias XML_DTD_INVALID_DEFAULT = UInt(516);
alias XML_DTD_LOAD_ERROR = UInt(517);
alias XML_DTD_MISSING_ATTRIBUTE = UInt(518);
alias XML_DTD_MIXED_CORRUPT = UInt(519);
alias XML_DTD_MULTIPLE_ID = UInt(520);
alias XML_DTD_NO_DOC = UInt(521);
alias XML_DTD_NO_DTD = UInt(522);
alias XML_DTD_NO_ELEM_NAME = UInt(523);
alias XML_DTD_NO_PREFIX = UInt(524);
alias XML_DTD_NO_ROOT = UInt(525);
alias XML_DTD_NOTATION_REDEFINED = UInt(526);
alias XML_DTD_NOTATION_VALUE = UInt(527);
alias XML_DTD_NOT_EMPTY = UInt(528);
alias XML_DTD_NOT_PCDATA = UInt(529);
alias XML_DTD_NOT_STANDALONE = UInt(530);
alias XML_DTD_ROOT_NAME = UInt(531);
alias XML_DTD_STANDALONE_WHITE_SPACE = UInt(532);
alias XML_DTD_UNKNOWN_ATTRIBUTE = UInt(533);
alias XML_DTD_UNKNOWN_ELEM = UInt(534);
alias XML_DTD_UNKNOWN_ENTITY = UInt(535);
alias XML_DTD_UNKNOWN_ID = UInt(536);
alias XML_DTD_UNKNOWN_NOTATION = UInt(537);
alias XML_DTD_STANDALONE_DEFAULTED = UInt(538);
alias XML_DTD_XMLID_VALUE = UInt(539);
alias XML_DTD_XMLID_TYPE = UInt(540);
alias XML_DTD_DUP_TOKEN = UInt(541);
alias XML_HTML_STRUCURE_ERROR = UInt(800);
alias XML_HTML_UNKNOWN_TAG = UInt(801);
alias XML_RNGP_ANYNAME_ATTR_ANCESTOR = UInt(1000);
alias XML_RNGP_ATTR_CONFLICT = UInt(1001);
alias XML_RNGP_ATTRIBUTE_CHILDREN = UInt(1002);
alias XML_RNGP_ATTRIBUTE_CONTENT = UInt(1003);
alias XML_RNGP_ATTRIBUTE_EMPTY = UInt(1004);
alias XML_RNGP_ATTRIBUTE_NOOP = UInt(1005);
alias XML_RNGP_CHOICE_CONTENT = UInt(1006);
alias XML_RNGP_CHOICE_EMPTY = UInt(1007);
alias XML_RNGP_CREATE_FAILURE = UInt(1008);
alias XML_RNGP_DATA_CONTENT = UInt(1009);
alias XML_RNGP_DEF_CHOICE_AND_INTERLEAVE = UInt(1010);
alias XML_RNGP_DEFINE_CREATE_FAILED = UInt(1011);
alias XML_RNGP_DEFINE_EMPTY = UInt(1012);
alias XML_RNGP_DEFINE_MISSING = UInt(1013);
alias XML_RNGP_DEFINE_NAME_MISSING = UInt(1014);
alias XML_RNGP_ELEM_CONTENT_EMPTY = UInt(1015);
alias XML_RNGP_ELEM_CONTENT_ERROR = UInt(1016);
alias XML_RNGP_ELEMENT_EMPTY = UInt(1017);
alias XML_RNGP_ELEMENT_CONTENT = UInt(1018);
alias XML_RNGP_ELEMENT_NAME = UInt(1019);
alias XML_RNGP_ELEMENT_NO_CONTENT = UInt(1020);
alias XML_RNGP_ELEM_TEXT_CONFLICT = UInt(1021);
alias XML_RNGP_EMPTY = UInt(1022);
alias XML_RNGP_EMPTY_CONSTRUCT = UInt(1023);
alias XML_RNGP_EMPTY_CONTENT = UInt(1024);
alias XML_RNGP_EMPTY_NOT_EMPTY = UInt(1025);
alias XML_RNGP_ERROR_TYPE_LIB = UInt(1026);
alias XML_RNGP_EXCEPT_EMPTY = UInt(1027);
alias XML_RNGP_EXCEPT_MISSING = UInt(1028);
alias XML_RNGP_EXCEPT_MULTIPLE = UInt(1029);
alias XML_RNGP_EXCEPT_NO_CONTENT = UInt(1030);
alias XML_RNGP_EXTERNALREF_EMTPY = UInt(1031);
alias XML_RNGP_EXTERNAL_REF_FAILURE = UInt(1032);
alias XML_RNGP_EXTERNALREF_RECURSE = UInt(1033);
alias XML_RNGP_FORBIDDEN_ATTRIBUTE = UInt(1034);
alias XML_RNGP_FOREIGN_ELEMENT = UInt(1035);
alias XML_RNGP_GRAMMAR_CONTENT = UInt(1036);
alias XML_RNGP_GRAMMAR_EMPTY = UInt(1037);
alias XML_RNGP_GRAMMAR_MISSING = UInt(1038);
alias XML_RNGP_GRAMMAR_NO_START = UInt(1039);
alias XML_RNGP_GROUP_ATTR_CONFLICT = UInt(1040);
alias XML_RNGP_HREF_ERROR = UInt(1041);
alias XML_RNGP_INCLUDE_EMPTY = UInt(1042);
alias XML_RNGP_INCLUDE_FAILURE = UInt(1043);
alias XML_RNGP_INCLUDE_RECURSE = UInt(1044);
alias XML_RNGP_INTERLEAVE_ADD = UInt(1045);
alias XML_RNGP_INTERLEAVE_CREATE_FAILED = UInt(1046);
alias XML_RNGP_INTERLEAVE_EMPTY = UInt(1047);
alias XML_RNGP_INTERLEAVE_NO_CONTENT = UInt(1048);
alias XML_RNGP_INVALID_DEFINE_NAME = UInt(1049);
alias XML_RNGP_INVALID_URI = UInt(1050);
alias XML_RNGP_INVALID_VALUE = UInt(1051);
alias XML_RNGP_MISSING_HREF = UInt(1052);
alias XML_RNGP_NAME_MISSING = UInt(1053);
alias XML_RNGP_NEED_COMBINE = UInt(1054);
alias XML_RNGP_NOTALLOWED_NOT_EMPTY = UInt(1055);
alias XML_RNGP_NSNAME_ATTR_ANCESTOR = UInt(1056);
alias XML_RNGP_NSNAME_NO_NS = UInt(1057);
alias XML_RNGP_PARAM_FORBIDDEN = UInt(1058);
alias XML_RNGP_PARAM_NAME_MISSING = UInt(1059);
alias XML_RNGP_PARENTREF_CREATE_FAILED = UInt(1060);
alias XML_RNGP_PARENTREF_NAME_INVALID = UInt(1061);
alias XML_RNGP_PARENTREF_NO_NAME = UInt(1062);
alias XML_RNGP_PARENTREF_NO_PARENT = UInt(1063);
alias XML_RNGP_PARENTREF_NOT_EMPTY = UInt(1064);
alias XML_RNGP_PARSE_ERROR = UInt(1065);
alias XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME = UInt(1066);
alias XML_RNGP_PAT_ATTR_ATTR = UInt(1067);
alias XML_RNGP_PAT_ATTR_ELEM = UInt(1068);
alias XML_RNGP_PAT_DATA_EXCEPT_ATTR = UInt(1069);
alias XML_RNGP_PAT_DATA_EXCEPT_ELEM = UInt(1070);
alias XML_RNGP_PAT_DATA_EXCEPT_EMPTY = UInt(1071);
alias XML_RNGP_PAT_DATA_EXCEPT_GROUP = UInt(1072);
alias XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE = UInt(1073);
alias XML_RNGP_PAT_DATA_EXCEPT_LIST = UInt(1074);
alias XML_RNGP_PAT_DATA_EXCEPT_ONEMORE = UInt(1075);
alias XML_RNGP_PAT_DATA_EXCEPT_REF = UInt(1076);
alias XML_RNGP_PAT_DATA_EXCEPT_TEXT = UInt(1077);
alias XML_RNGP_PAT_LIST_ATTR = UInt(1078);
alias XML_RNGP_PAT_LIST_ELEM = UInt(1079);
alias XML_RNGP_PAT_LIST_INTERLEAVE = UInt(1080);
alias XML_RNGP_PAT_LIST_LIST = UInt(1081);
alias XML_RNGP_PAT_LIST_REF = UInt(1082);
alias XML_RNGP_PAT_LIST_TEXT = UInt(1083);
alias XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME = UInt(1084);
alias XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME = UInt(1085);
alias XML_RNGP_PAT_ONEMORE_GROUP_ATTR = UInt(1086);
alias XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR = UInt(1087);
alias XML_RNGP_PAT_START_ATTR = UInt(1088);
alias XML_RNGP_PAT_START_DATA = UInt(1089);
alias XML_RNGP_PAT_START_EMPTY = UInt(1090);
alias XML_RNGP_PAT_START_GROUP = UInt(1091);
alias XML_RNGP_PAT_START_INTERLEAVE = UInt(1092);
alias XML_RNGP_PAT_START_LIST = UInt(1093);
alias XML_RNGP_PAT_START_ONEMORE = UInt(1094);
alias XML_RNGP_PAT_START_TEXT = UInt(1095);
alias XML_RNGP_PAT_START_VALUE = UInt(1096);
alias XML_RNGP_PREFIX_UNDEFINED = UInt(1097);
alias XML_RNGP_REF_CREATE_FAILED = UInt(1098);
alias XML_RNGP_REF_CYCLE = UInt(1099);
alias XML_RNGP_REF_NAME_INVALID = UInt(1100);
alias XML_RNGP_REF_NO_DEF = UInt(1101);
alias XML_RNGP_REF_NO_NAME = UInt(1102);
alias XML_RNGP_REF_NOT_EMPTY = UInt(1103);
alias XML_RNGP_START_CHOICE_AND_INTERLEAVE = UInt(1104);
alias XML_RNGP_START_CONTENT = UInt(1105);
alias XML_RNGP_START_EMPTY = UInt(1106);
alias XML_RNGP_START_MISSING = UInt(1107);
alias XML_RNGP_TEXT_EXPECTED = UInt(1108);
alias XML_RNGP_TEXT_HAS_CHILD = UInt(1109);
alias XML_RNGP_TYPE_MISSING = UInt(1110);
alias XML_RNGP_TYPE_NOT_FOUND = UInt(1111);
alias XML_RNGP_TYPE_VALUE = UInt(1112);
alias XML_RNGP_UNKNOWN_ATTRIBUTE = UInt(1113);
alias XML_RNGP_UNKNOWN_COMBINE = UInt(1114);
alias XML_RNGP_UNKNOWN_CONSTRUCT = UInt(1115);
alias XML_RNGP_UNKNOWN_TYPE_LIB = UInt(1116);
alias XML_RNGP_URI_FRAGMENT = UInt(1117);
alias XML_RNGP_URI_NOT_ABSOLUTE = UInt(1118);
alias XML_RNGP_VALUE_EMPTY = UInt(1119);
alias XML_RNGP_VALUE_NO_CONTENT = UInt(1120);
alias XML_RNGP_XMLNS_NAME = UInt(1121);
alias XML_RNGP_XML_NS = UInt(1122);
alias XML_XPATH_EXPRESSION_OK = UInt(1200);
alias XML_XPATH_NUMBER_ERROR = UInt(1201);
alias XML_XPATH_UNFINISHED_LITERAL_ERROR = UInt(1202);
alias XML_XPATH_START_LITERAL_ERROR = UInt(1203);
alias XML_XPATH_VARIABLE_REF_ERROR = UInt(1204);
alias XML_XPATH_UNDEF_VARIABLE_ERROR = UInt(1205);
alias XML_XPATH_INVALID_PREDICATE_ERROR = UInt(1206);
alias XML_XPATH_EXPR_ERROR = UInt(1207);
alias XML_XPATH_UNCLOSED_ERROR = UInt(1208);
alias XML_XPATH_UNKNOWN_FUNC_ERROR = UInt(1209);
alias XML_XPATH_INVALID_OPERAND = UInt(1210);
alias XML_XPATH_INVALID_TYPE = UInt(1211);
alias XML_XPATH_INVALID_ARITY = UInt(1212);
alias XML_XPATH_INVALID_CTXT_SIZE = UInt(1213);
alias XML_XPATH_INVALID_CTXT_POSITION = UInt(1214);
alias XML_XPATH_MEMORY_ERROR = UInt(1215);
alias XML_XPTR_SYNTAX_ERROR = UInt(1216);
alias XML_XPTR_RESOURCE_ERROR = UInt(1217);
alias XML_XPTR_SUB_RESOURCE_ERROR = UInt(1218);
alias XML_XPATH_UNDEF_PREFIX_ERROR = UInt(1219);
alias XML_XPATH_ENCODING_ERROR = UInt(1220);
alias XML_XPATH_INVALID_CHAR_ERROR = UInt(1221);
alias XML_TREE_INVALID_HEX = UInt(1300);
alias XML_TREE_INVALID_DEC = UInt(1301);
alias XML_TREE_UNTERMINATED_ENTITY = UInt(1302);
alias XML_TREE_NOT_UTF8 = UInt(1303);
alias XML_SAVE_NOT_UTF8 = UInt(1400);
alias XML_SAVE_CHAR_INVALID = UInt(1401);
alias XML_SAVE_NO_DOCTYPE = UInt(1402);
alias XML_SAVE_UNKNOWN_ENCODING = UInt(1403);
alias XML_REGEXP_COMPILE_ERROR = UInt(1450);
alias XML_IO_UNKNOWN = UInt(1500);
alias XML_IO_EACCES = UInt(1501);
alias XML_IO_EAGAIN = UInt(1502);
alias XML_IO_EBADF = UInt(1503);
alias XML_IO_EBADMSG = UInt(1504);
alias XML_IO_EBUSY = UInt(1505);
alias XML_IO_ECANCELED = UInt(1506);
alias XML_IO_ECHILD = UInt(1507);
alias XML_IO_EDEADLK = UInt(1508);
alias XML_IO_EDOM = UInt(1509);
alias XML_IO_EEXIST = UInt(1510);
alias XML_IO_EFAULT = UInt(1511);
alias XML_IO_EFBIG = UInt(1512);
alias XML_IO_EINPROGRESS = UInt(1513);
alias XML_IO_EINTR = UInt(1514);
alias XML_IO_EINVAL = UInt(1515);
alias XML_IO_EIO = UInt(1516);
alias XML_IO_EISDIR = UInt(1517);
alias XML_IO_EMFILE = UInt(1518);
alias XML_IO_EMLINK = UInt(1519);
alias XML_IO_EMSGSIZE = UInt(1520);
alias XML_IO_ENAMETOOLONG = UInt(1521);
alias XML_IO_ENFILE = UInt(1522);
alias XML_IO_ENODEV = UInt(1523);
alias XML_IO_ENOENT = UInt(1524);
alias XML_IO_ENOEXEC = UInt(1525);
alias XML_IO_ENOLCK = UInt(1526);
alias XML_IO_ENOMEM = UInt(1527);
alias XML_IO_ENOSPC = UInt(1528);
alias XML_IO_ENOSYS = UInt(1529);
alias XML_IO_ENOTDIR = UInt(1530);
alias XML_IO_ENOTEMPTY = UInt(1531);
alias XML_IO_ENOTSUP = UInt(1532);
alias XML_IO_ENOTTY = UInt(1533);
alias XML_IO_ENXIO = UInt(1534);
alias XML_IO_EPERM = UInt(1535);
alias XML_IO_EPIPE = UInt(1536);
alias XML_IO_ERANGE = UInt(1537);
alias XML_IO_EROFS = UInt(1538);
alias XML_IO_ESPIPE = UInt(1539);
alias XML_IO_ESRCH = UInt(1540);
alias XML_IO_ETIMEDOUT = UInt(1541);
alias XML_IO_EXDEV = UInt(1542);
alias XML_IO_NETWORK_ATTEMPT = UInt(1543);
alias XML_IO_ENCODER = UInt(1544);
alias XML_IO_FLUSH = UInt(1545);
alias XML_IO_WRITE = UInt(1546);
alias XML_IO_NO_INPUT = UInt(1547);
alias XML_IO_BUFFER_FULL = UInt(1548);
alias XML_IO_LOAD_ERROR = UInt(1549);
alias XML_IO_ENOTSOCK = UInt(1550);
alias XML_IO_EISCONN = UInt(1551);
alias XML_IO_ECONNREFUSED = UInt(1552);
alias XML_IO_ENETUNREACH = UInt(1553);
alias XML_IO_EADDRINUSE = UInt(1554);
alias XML_IO_EALREADY = UInt(1555);
alias XML_IO_EAFNOSUPPORT = UInt(1556);
alias XML_XINCLUDE_RECURSION = UInt(1600);
alias XML_XINCLUDE_PARSE_VALUE = UInt(1601);
alias XML_XINCLUDE_ENTITY_DEF_MISMATCH = UInt(1602);
alias XML_XINCLUDE_NO_HREF = UInt(1603);
alias XML_XINCLUDE_NO_FALLBACK = UInt(1604);
alias XML_XINCLUDE_HREF_URI = UInt(1605);
alias XML_XINCLUDE_TEXT_FRAGMENT = UInt(1606);
alias XML_XINCLUDE_TEXT_DOCUMENT = UInt(1607);
alias XML_XINCLUDE_INVALID_CHAR = UInt(1608);
alias XML_XINCLUDE_BUILD_FAILED = UInt(1609);
alias XML_XINCLUDE_UNKNOWN_ENCODING = UInt(1610);
alias XML_XINCLUDE_MULTIPLE_ROOT = UInt(1611);
alias XML_XINCLUDE_XPTR_FAILED = UInt(1612);
alias XML_XINCLUDE_XPTR_RESULT = UInt(1613);
alias XML_XINCLUDE_INCLUDE_IN_INCLUDE = UInt(1614);
alias XML_XINCLUDE_FALLBACKS_IN_INCLUDE = UInt(1615);
alias XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE = UInt(1616);
alias XML_XINCLUDE_DEPRECATED_NS = UInt(1617);
alias XML_XINCLUDE_FRAGMENT_ID = UInt(1618);
alias XML_CATALOG_MISSING_ATTR = UInt(1650);
alias XML_CATALOG_ENTRY_BROKEN = UInt(1651);
alias XML_CATALOG_PREFER_VALUE = UInt(1652);
alias XML_CATALOG_NOT_CATALOG = UInt(1653);
alias XML_CATALOG_RECURSION = UInt(1654);
alias XML_SCHEMAP_PREFIX_UNDEFINED = UInt(1700);
alias XML_SCHEMAP_ATTRFORMDEFAULT_VALUE = UInt(1701);
alias XML_SCHEMAP_ATTRGRP_NONAME_NOREF = UInt(1702);
alias XML_SCHEMAP_ATTR_NONAME_NOREF = UInt(1703);
alias XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF = UInt(1704);
alias XML_SCHEMAP_ELEMFORMDEFAULT_VALUE = UInt(1705);
alias XML_SCHEMAP_ELEM_NONAME_NOREF = UInt(1706);
alias XML_SCHEMAP_EXTENSION_NO_BASE = UInt(1707);
alias XML_SCHEMAP_FACET_NO_VALUE = UInt(1708);
alias XML_SCHEMAP_FAILED_BUILD_IMPORT = UInt(1709);
alias XML_SCHEMAP_GROUP_NONAME_NOREF = UInt(1710);
alias XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI = UInt(1711);
alias XML_SCHEMAP_IMPORT_REDEFINE_NSNAME = UInt(1712);
alias XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI = UInt(1713);
alias XML_SCHEMAP_INVALID_BOOLEAN = UInt(1714);
alias XML_SCHEMAP_INVALID_ENUM = UInt(1715);
alias XML_SCHEMAP_INVALID_FACET = UInt(1716);
alias XML_SCHEMAP_INVALID_FACET_VALUE = UInt(1717);
alias XML_SCHEMAP_INVALID_MAXOCCURS = UInt(1718);
alias XML_SCHEMAP_INVALID_MINOCCURS = UInt(1719);
alias XML_SCHEMAP_INVALID_REF_AND_SUBTYPE = UInt(1720);
alias XML_SCHEMAP_INVALID_WHITE_SPACE = UInt(1721);
alias XML_SCHEMAP_NOATTR_NOREF = UInt(1722);
alias XML_SCHEMAP_NOTATION_NO_NAME = UInt(1723);
alias XML_SCHEMAP_NOTYPE_NOREF = UInt(1724);
alias XML_SCHEMAP_REF_AND_SUBTYPE = UInt(1725);
alias XML_SCHEMAP_RESTRICTION_NONAME_NOREF = UInt(1726);
alias XML_SCHEMAP_SIMPLETYPE_NONAME = UInt(1727);
alias XML_SCHEMAP_TYPE_AND_SUBTYPE = UInt(1728);
alias XML_SCHEMAP_UNKNOWN_ALL_CHILD = UInt(1729);
alias XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD = UInt(1730);
alias XML_SCHEMAP_UNKNOWN_ATTR_CHILD = UInt(1731);
alias XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD = UInt(1732);
alias XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP = UInt(1733);
alias XML_SCHEMAP_UNKNOWN_BASE_TYPE = UInt(1734);
alias XML_SCHEMAP_UNKNOWN_CHOICE_CHILD = UInt(1735);
alias XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD = UInt(1736);
alias XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD = UInt(1737);
alias XML_SCHEMAP_UNKNOWN_ELEM_CHILD = UInt(1738);
alias XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD = UInt(1739);
alias XML_SCHEMAP_UNKNOWN_FACET_CHILD = UInt(1740);
alias XML_SCHEMAP_UNKNOWN_FACET_TYPE = UInt(1741);
alias XML_SCHEMAP_UNKNOWN_GROUP_CHILD = UInt(1742);
alias XML_SCHEMAP_UNKNOWN_IMPORT_CHILD = UInt(1743);
alias XML_SCHEMAP_UNKNOWN_LIST_CHILD = UInt(1744);
alias XML_SCHEMAP_UNKNOWN_NOTATION_CHILD = UInt(1745);
alias XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD = UInt(1746);
alias XML_SCHEMAP_UNKNOWN_REF = UInt(1747);
alias XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD = UInt(1748);
alias XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD = UInt(1749);
alias XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD = UInt(1750);
alias XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD = UInt(1751);
alias XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD = UInt(1752);
alias XML_SCHEMAP_UNKNOWN_TYPE = UInt(1753);
alias XML_SCHEMAP_UNKNOWN_UNION_CHILD = UInt(1754);
alias XML_SCHEMAP_ELEM_DEFAULT_FIXED = UInt(1755);
alias XML_SCHEMAP_REGEXP_INVALID = UInt(1756);
alias XML_SCHEMAP_FAILED_LOAD = UInt(1757);
alias XML_SCHEMAP_NOTHING_TO_PARSE = UInt(1758);
alias XML_SCHEMAP_NOROOT = UInt(1759);
alias XML_SCHEMAP_REDEFINED_GROUP = UInt(1760);
alias XML_SCHEMAP_REDEFINED_TYPE = UInt(1761);
alias XML_SCHEMAP_REDEFINED_ELEMENT = UInt(1762);
alias XML_SCHEMAP_REDEFINED_ATTRGROUP = UInt(1763);
alias XML_SCHEMAP_REDEFINED_ATTR = UInt(1764);
alias XML_SCHEMAP_REDEFINED_NOTATION = UInt(1765);
alias XML_SCHEMAP_FAILED_PARSE = UInt(1766);
alias XML_SCHEMAP_UNKNOWN_PREFIX = UInt(1767);
alias XML_SCHEMAP_DEF_AND_PREFIX = UInt(1768);
alias XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD = UInt(1769);
alias XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI = UInt(1770);
alias XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI = UInt(1771);
alias XML_SCHEMAP_NOT_SCHEMA = UInt(1772);
alias XML_SCHEMAP_UNKNOWN_MEMBER_TYPE = UInt(1773);
alias XML_SCHEMAP_INVALID_ATTR_USE = UInt(1774);
alias XML_SCHEMAP_RECURSIVE = UInt(1775);
alias XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE = UInt(1776);
alias XML_SCHEMAP_INVALID_ATTR_COMBINATION = UInt(1777);
alias XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION = UInt(1778);
alias XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD = UInt(1779);
alias XML_SCHEMAP_INVALID_ATTR_NAME = UInt(1780);
alias XML_SCHEMAP_REF_AND_CONTENT = UInt(1781);
alias XML_SCHEMAP_CT_PROPS_CORRECT_1 = UInt(1782);
alias XML_SCHEMAP_CT_PROPS_CORRECT_2 = UInt(1783);
alias XML_SCHEMAP_CT_PROPS_CORRECT_3 = UInt(1784);
alias XML_SCHEMAP_CT_PROPS_CORRECT_4 = UInt(1785);
alias XML_SCHEMAP_CT_PROPS_CORRECT_5 = UInt(1786);
alias XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1 = UInt(1787);
alias XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1 = UInt(1788);
alias XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2 = UInt(1789);
alias XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2 = UInt(1790);
alias XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3 = UInt(1791);
alias XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER = UInt(1792);
alias XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE = UInt(1793);
alias XML_SCHEMAP_UNION_NOT_EXPRESSIBLE = UInt(1794);
alias XML_SCHEMAP_SRC_IMPORT_3_1 = UInt(1795);
alias XML_SCHEMAP_SRC_IMPORT_3_2 = UInt(1796);
alias XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1 = UInt(1797);
alias XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2 = UInt(1798);
alias XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3 = UInt(1799);
alias XML_SCHEMAP_COS_CT_EXTENDS_1_3 = UInt(1800);
alias XML_SCHEMAV_NOROOT = UInt(1801);
alias XML_SCHEMAV_UNDECLAREDELEM = UInt(1802);
alias XML_SCHEMAV_NOTTOPLEVEL = UInt(1803);
alias XML_SCHEMAV_MISSING = UInt(1804);
alias XML_SCHEMAV_WRONGELEM = UInt(1805);
alias XML_SCHEMAV_NOTYPE = UInt(1806);
alias XML_SCHEMAV_NOROLLBACK = UInt(1807);
alias XML_SCHEMAV_ISABSTRACT = UInt(1808);
alias XML_SCHEMAV_NOTEMPTY = UInt(1809);
alias XML_SCHEMAV_ELEMCONT = UInt(1810);
alias XML_SCHEMAV_HAVEDEFAULT = UInt(1811);
alias XML_SCHEMAV_NOTNILLABLE = UInt(1812);
alias XML_SCHEMAV_EXTRACONTENT = UInt(1813);
alias XML_SCHEMAV_INVALIDATTR = UInt(1814);
alias XML_SCHEMAV_INVALIDELEM = UInt(1815);
alias XML_SCHEMAV_NOTDETERMINIST = UInt(1816);
alias XML_SCHEMAV_CONSTRUCT = UInt(1817);
alias XML_SCHEMAV_INTERNAL = UInt(1818);
alias XML_SCHEMAV_NOTSIMPLE = UInt(1819);
alias XML_SCHEMAV_ATTRUNKNOWN = UInt(1820);
alias XML_SCHEMAV_ATTRINVALID = UInt(1821);
alias XML_SCHEMAV_VALUE = UInt(1822);
alias XML_SCHEMAV_FACET = UInt(1823);
alias XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1 = UInt(1824);
alias XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2 = UInt(1825);
alias XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3 = UInt(1826);
alias XML_SCHEMAV_CVC_TYPE_3_1_1 = UInt(1827);
alias XML_SCHEMAV_CVC_TYPE_3_1_2 = UInt(1828);
alias XML_SCHEMAV_CVC_FACET_VALID = UInt(1829);
alias XML_SCHEMAV_CVC_LENGTH_VALID = UInt(1830);
alias XML_SCHEMAV_CVC_MINLENGTH_VALID = UInt(1831);
alias XML_SCHEMAV_CVC_MAXLENGTH_VALID = UInt(1832);
alias XML_SCHEMAV_CVC_MININCLUSIVE_VALID = UInt(1833);
alias XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID = UInt(1834);
alias XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID = UInt(1835);
alias XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID = UInt(1836);
alias XML_SCHEMAV_CVC_TOTALDIGITS_VALID = UInt(1837);
alias XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID = UInt(1838);
alias XML_SCHEMAV_CVC_PATTERN_VALID = UInt(1839);
alias XML_SCHEMAV_CVC_ENUMERATION_VALID = UInt(1840);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1 = UInt(1841);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2 = UInt(1842);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3 = UInt(1843);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4 = UInt(1844);
alias XML_SCHEMAV_CVC_ELT_1 = UInt(1845);
alias XML_SCHEMAV_CVC_ELT_2 = UInt(1846);
alias XML_SCHEMAV_CVC_ELT_3_1 = UInt(1847);
alias XML_SCHEMAV_CVC_ELT_3_2_1 = UInt(1848);
alias XML_SCHEMAV_CVC_ELT_3_2_2 = UInt(1849);
alias XML_SCHEMAV_CVC_ELT_4_1 = UInt(1850);
alias XML_SCHEMAV_CVC_ELT_4_2 = UInt(1851);
alias XML_SCHEMAV_CVC_ELT_4_3 = UInt(1852);
alias XML_SCHEMAV_CVC_ELT_5_1_1 = UInt(1853);
alias XML_SCHEMAV_CVC_ELT_5_1_2 = UInt(1854);
alias XML_SCHEMAV_CVC_ELT_5_2_1 = UInt(1855);
alias XML_SCHEMAV_CVC_ELT_5_2_2_1 = UInt(1856);
alias XML_SCHEMAV_CVC_ELT_5_2_2_2_1 = UInt(1857);
alias XML_SCHEMAV_CVC_ELT_5_2_2_2_2 = UInt(1858);
alias XML_SCHEMAV_CVC_ELT_6 = UInt(1859);
alias XML_SCHEMAV_CVC_ELT_7 = UInt(1860);
alias XML_SCHEMAV_CVC_ATTRIBUTE_1 = UInt(1861);
alias XML_SCHEMAV_CVC_ATTRIBUTE_2 = UInt(1862);
alias XML_SCHEMAV_CVC_ATTRIBUTE_3 = UInt(1863);
alias XML_SCHEMAV_CVC_ATTRIBUTE_4 = UInt(1864);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1 = UInt(1865);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1 = UInt(1866);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2 = UInt(1867);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_4 = UInt(1868);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1 = UInt(1869);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2 = UInt(1870);
alias XML_SCHEMAV_ELEMENT_CONTENT = UInt(1871);
alias XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING = UInt(1872);
alias XML_SCHEMAV_CVC_COMPLEX_TYPE_1 = UInt(1873);
alias XML_SCHEMAV_CVC_AU = UInt(1874);
alias XML_SCHEMAV_CVC_TYPE_1 = UInt(1875);
alias XML_SCHEMAV_CVC_TYPE_2 = UInt(1876);
alias XML_SCHEMAV_CVC_IDC = UInt(1877);
alias XML_SCHEMAV_CVC_WILDCARD = UInt(1878);
alias XML_SCHEMAV_MISC = UInt(1879);
alias XML_XPTR_UNKNOWN_SCHEME = UInt(1900);
alias XML_XPTR_CHILDSEQ_START = UInt(1901);
alias XML_XPTR_EVAL_FAILED = UInt(1902);
alias XML_XPTR_EXTRA_OBJECTS = UInt(1903);
alias XML_C14N_CREATE_CTXT = UInt(1950);
alias XML_C14N_REQUIRES_UTF8 = UInt(1951);
alias XML_C14N_CREATE_STACK = UInt(1952);
alias XML_C14N_INVALID_NODE = UInt(1953);
alias XML_C14N_UNKNOW_NODE = UInt(1954);
alias XML_C14N_RELATIVE_NAMESPACE = UInt(1955);
alias XML_FTP_PASV_ANSWER = UInt(2000);
alias XML_FTP_EPSV_ANSWER = UInt(2001);
alias XML_FTP_ACCNT = UInt(2002);
alias XML_FTP_URL_SYNTAX = UInt(2003);
alias XML_HTTP_URL_SYNTAX = UInt(2020);
alias XML_HTTP_USE_IP = UInt(2021);
alias XML_HTTP_UNKNOWN_HOST = UInt(2022);
alias XML_SCHEMAP_SRC_SIMPLE_TYPE_1 = UInt(3000);
alias XML_SCHEMAP_SRC_SIMPLE_TYPE_2 = UInt(3001);
alias XML_SCHEMAP_SRC_SIMPLE_TYPE_3 = UInt(3002);
alias XML_SCHEMAP_SRC_SIMPLE_TYPE_4 = UInt(3003);
alias XML_SCHEMAP_SRC_RESOLVE = UInt(3004);
alias XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE = UInt(3005);
alias XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE = UInt(3006);
alias XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES = UInt(3007);
alias XML_SCHEMAP_ST_PROPS_CORRECT_1 = UInt(3008);
alias XML_SCHEMAP_ST_PROPS_CORRECT_2 = UInt(3009);
alias XML_SCHEMAP_ST_PROPS_CORRECT_3 = UInt(3010);
alias XML_SCHEMAP_COS_ST_RESTRICTS_1_1 = UInt(3011);
alias XML_SCHEMAP_COS_ST_RESTRICTS_1_2 = UInt(3012);
alias XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1 = UInt(3013);
alias XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2 = UInt(3014);
alias XML_SCHEMAP_COS_ST_RESTRICTS_2_1 = UInt(3015);
alias XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1 = UInt(3016);
alias XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2 = UInt(3017);
alias XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1 = UInt(3018);
alias XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2 = UInt(3019);
alias XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3 = UInt(3020);
alias XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4 = UInt(3021);
alias XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5 = UInt(3022);
alias XML_SCHEMAP_COS_ST_RESTRICTS_3_1 = UInt(3023);
alias XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1 = UInt(3024);
alias XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2 = UInt(3025);
alias XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2 = UInt(3026);
alias XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1 = UInt(3027);
alias XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3 = UInt(3028);
alias XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4 = UInt(3029);
alias XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5 = UInt(3030);
alias XML_SCHEMAP_COS_ST_DERIVED_OK_2_1 = UInt(3031);
alias XML_SCHEMAP_COS_ST_DERIVED_OK_2_2 = UInt(3032);
alias XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED = UInt(3033);
alias XML_SCHEMAP_S4S_ELEM_MISSING = UInt(3034);
alias XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED = UInt(3035);
alias XML_SCHEMAP_S4S_ATTR_MISSING = UInt(3036);
alias XML_SCHEMAP_S4S_ATTR_INVALID_VALUE = UInt(3037);
alias XML_SCHEMAP_SRC_ELEMENT_1 = UInt(3038);
alias XML_SCHEMAP_SRC_ELEMENT_2_1 = UInt(3039);
alias XML_SCHEMAP_SRC_ELEMENT_2_2 = UInt(3040);
alias XML_SCHEMAP_SRC_ELEMENT_3 = UInt(3041);
alias XML_SCHEMAP_P_PROPS_CORRECT_1 = UInt(3042);
alias XML_SCHEMAP_P_PROPS_CORRECT_2_1 = UInt(3043);
alias XML_SCHEMAP_P_PROPS_CORRECT_2_2 = UInt(3044);
alias XML_SCHEMAP_E_PROPS_CORRECT_2 = UInt(3045);
alias XML_SCHEMAP_E_PROPS_CORRECT_3 = UInt(3046);
alias XML_SCHEMAP_E_PROPS_CORRECT_4 = UInt(3047);
alias XML_SCHEMAP_E_PROPS_CORRECT_5 = UInt(3048);
alias XML_SCHEMAP_E_PROPS_CORRECT_6 = UInt(3049);
alias XML_SCHEMAP_SRC_INCLUDE = UInt(3050);
alias XML_SCHEMAP_SRC_ATTRIBUTE_1 = UInt(3051);
alias XML_SCHEMAP_SRC_ATTRIBUTE_2 = UInt(3052);
alias XML_SCHEMAP_SRC_ATTRIBUTE_3_1 = UInt(3053);
alias XML_SCHEMAP_SRC_ATTRIBUTE_3_2 = UInt(3054);
alias XML_SCHEMAP_SRC_ATTRIBUTE_4 = UInt(3055);
alias XML_SCHEMAP_NO_XMLNS = UInt(3056);
alias XML_SCHEMAP_NO_XSI = UInt(3057);
alias XML_SCHEMAP_COS_VALID_DEFAULT_1 = UInt(3058);
alias XML_SCHEMAP_COS_VALID_DEFAULT_2_1 = UInt(3059);
alias XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1 = UInt(3060);
alias XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2 = UInt(3061);
alias XML_SCHEMAP_CVC_SIMPLE_TYPE = UInt(3062);
alias XML_SCHEMAP_COS_CT_EXTENDS_1_1 = UInt(3063);
alias XML_SCHEMAP_SRC_IMPORT_1_1 = UInt(3064);
alias XML_SCHEMAP_SRC_IMPORT_1_2 = UInt(3065);
alias XML_SCHEMAP_SRC_IMPORT_2 = UInt(3066);
alias XML_SCHEMAP_SRC_IMPORT_2_1 = UInt(3067);
alias XML_SCHEMAP_SRC_IMPORT_2_2 = UInt(3068);
alias XML_SCHEMAP_INTERNAL = UInt(3069);
alias XML_SCHEMAP_NOT_DETERMINISTIC = UInt(3070);
alias XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1 = UInt(3071);
alias XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2 = UInt(3072);
alias XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3 = UInt(3073);
alias XML_SCHEMAP_MG_PROPS_CORRECT_1 = UInt(3074);
alias XML_SCHEMAP_MG_PROPS_CORRECT_2 = UInt(3075);
alias XML_SCHEMAP_SRC_CT_1 = UInt(3076);
alias XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3 = UInt(3077);
alias XML_SCHEMAP_AU_PROPS_CORRECT_2 = UInt(3078);
alias XML_SCHEMAP_A_PROPS_CORRECT_2 = UInt(3079);
alias XML_SCHEMAP_C_PROPS_CORRECT = UInt(3080);
alias XML_SCHEMAP_SRC_REDEFINE = UInt(3081);
alias XML_SCHEMAP_SRC_IMPORT = UInt(3082);
alias XML_SCHEMAP_WARN_SKIP_SCHEMA = UInt(3083);
alias XML_SCHEMAP_WARN_UNLOCATED_SCHEMA = UInt(3084);
alias XML_SCHEMAP_WARN_ATTR_REDECL_PROH = UInt(3085);
alias XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH = UInt(3086);
alias XML_SCHEMAP_AG_PROPS_CORRECT = UInt(3087);
alias XML_SCHEMAP_COS_CT_EXTENDS_1_2 = UInt(3088);
alias XML_SCHEMAP_AU_PROPS_CORRECT = UInt(3089);
alias XML_SCHEMAP_A_PROPS_CORRECT_3 = UInt(3090);
alias XML_SCHEMAP_COS_ALL_LIMITED = UInt(3091);
alias XML_SCHEMATRONV_ASSERT = UInt(4000);
alias XML_SCHEMATRONV_REPORT = UInt(4001);
alias XML_MODULE_OPEN = UInt(4900);
alias XML_MODULE_CLOSE = UInt(4901);
alias XML_CHECK_FOUND_ELEMENT = UInt(5000);
alias XML_CHECK_FOUND_ATTRIBUTE = UInt(5001);
alias XML_CHECK_FOUND_TEXT = UInt(5002);
alias XML_CHECK_FOUND_CDATA = UInt(5003);
alias XML_CHECK_FOUND_ENTITYREF = UInt(5004);
alias XML_CHECK_FOUND_ENTITY = UInt(5005);
alias XML_CHECK_FOUND_PI = UInt(5006);
alias XML_CHECK_FOUND_COMMENT = UInt(5007);
alias XML_CHECK_FOUND_DOCTYPE = UInt(5008);
alias XML_CHECK_FOUND_FRAGMENT = UInt(5009);
alias XML_CHECK_FOUND_NOTATION = UInt(5010);
alias XML_CHECK_UNKNOWN_NODE = UInt(5011);
alias XML_CHECK_ENTITY_TYPE = UInt(5012);
alias XML_CHECK_NO_PARENT = UInt(5013);
alias XML_CHECK_NO_DOC = UInt(5014);
alias XML_CHECK_NO_NAME = UInt(5015);
alias XML_CHECK_NO_ELEM = UInt(5016);
alias XML_CHECK_WRONG_DOC = UInt(5017);
alias XML_CHECK_NO_PREV = UInt(5018);
alias XML_CHECK_WRONG_PREV = UInt(5019);
alias XML_CHECK_NO_NEXT = UInt(5020);
alias XML_CHECK_WRONG_NEXT = UInt(5021);
alias XML_CHECK_NOT_DTD = UInt(5022);
alias XML_CHECK_NOT_ATTR = UInt(5023);
alias XML_CHECK_NOT_ATTR_DECL = UInt(5024);
alias XML_CHECK_NOT_ELEM_DECL = UInt(5025);
alias XML_CHECK_NOT_ENTITY_DECL = UInt(5026);
alias XML_CHECK_NOT_NS_DECL = UInt(5027);
alias XML_CHECK_NO_HREF = UInt(5028);
alias XML_CHECK_WRONG_PARENT = UInt(5029);
alias XML_CHECK_NS_SCOPE = UInt(5030);
alias XML_CHECK_NS_ANCESTOR = UInt(5031);
alias XML_CHECK_NOT_UTF8 = UInt(5032);
alias XML_CHECK_NO_DICT = UInt(5033);
alias XML_CHECK_NOT_NCNAME = UInt(5034);
alias XML_CHECK_OUTSIDE_DICT = UInt(5035);
alias XML_CHECK_WRONG_NAME = UInt(5036);
alias XML_CHECK_NAME_NOT_NULL = UInt(5037);
alias XML_I18N_NO_NAME = UInt(6000);
alias XML_I18N_NO_HANDLER = UInt(6001);
alias XML_I18N_EXCESS_HANDLER = UInt(6002);
alias XML_I18N_CONV_FAILED = UInt(6003);
alias XML_I18N_NO_OUTPUT = UInt(6004);

alias xmlParserErrors = UInt;

alias xmlGenericErrorFunc = VarArgsCCodePointer[[OpaquePointer, Pointer[CChar]],[]];

alias xmlStructuredErrorFunc = CCodePointer[[OpaquePointer, xmlErrorPtr],[]];

external (cdecl) xmlSetGenericErrorFunc(arg0:OpaquePointer, arg1:xmlGenericErrorFunc) : ;

external (cdecl) initGenericErrorDefaultFunc(arg0:Pointer[xmlGenericErrorFunc]) : ;

external (cdecl) xmlSetStructuredErrorFunc(arg0:OpaquePointer, arg1:xmlStructuredErrorFunc) : ;

external (cdecl) xmlParserError(arg0:OpaquePointer, arg1:Pointer[CChar], ..) : ;

external (cdecl) xmlParserWarning(arg0:OpaquePointer, arg1:Pointer[CChar], ..) : ;

external (cdecl) xmlParserValidityError(arg0:OpaquePointer, arg1:Pointer[CChar], ..) : ;

external (cdecl) xmlParserValidityWarning(arg0:OpaquePointer, arg1:Pointer[CChar], ..) : ;

external (cdecl) xmlParserPrintFileInfo(arg0:xmlParserInputPtr) : ;

external (cdecl) xmlParserPrintFileContext(arg0:xmlParserInputPtr) : ;

external (cdecl) xmlGetLastError() : xmlErrorPtr;

external (cdecl) xmlResetLastError() : ;

external (cdecl) xmlCtxtGetLastError(arg0:OpaquePointer) : xmlErrorPtr;

external (cdecl) xmlCtxtResetLastError(arg0:OpaquePointer) : ;

external (cdecl) xmlResetError(arg0:xmlErrorPtr) : ;

external (cdecl) xmlCopyError(arg0:xmlErrorPtr, arg1:xmlErrorPtr) : Int;

alias Struct__xmlLink = Opaque;

alias xmlLink = Struct__xmlLink;

alias xmlLinkPtr = Pointer[xmlLink];

alias Struct__xmlList = Opaque;

alias xmlList = Struct__xmlList;

alias xmlListPtr = Pointer[xmlList];

alias xmlListDeallocator = CCodePointer[[xmlLinkPtr],[]];

alias xmlListDataCompare = CCodePointer[[OpaquePointer, OpaquePointer],[Int]];

alias xmlListWalker = CCodePointer[[OpaquePointer, OpaquePointer],[Int]];

external (cdecl) xmlListCreate(arg0:xmlListDeallocator, arg1:xmlListDataCompare) : xmlListPtr;

external (cdecl) xmlListDelete(arg0:xmlListPtr) : ;

external (cdecl) xmlListSearch(arg0:xmlListPtr, arg1:OpaquePointer) : OpaquePointer;

external (cdecl) xmlListReverseSearch(arg0:xmlListPtr, arg1:OpaquePointer) : OpaquePointer;

external (cdecl) xmlListInsert(arg0:xmlListPtr, arg1:OpaquePointer) : Int;

external (cdecl) xmlListAppend(arg0:xmlListPtr, arg1:OpaquePointer) : Int;

external (cdecl) xmlListRemoveFirst(arg0:xmlListPtr, arg1:OpaquePointer) : Int;

external (cdecl) xmlListRemoveLast(arg0:xmlListPtr, arg1:OpaquePointer) : Int;

external (cdecl) xmlListRemoveAll(arg0:xmlListPtr, arg1:OpaquePointer) : Int;

external (cdecl) xmlListClear(arg0:xmlListPtr) : ;

external (cdecl) xmlListEmpty(arg0:xmlListPtr) : Int;

external (cdecl) xmlListFront(arg0:xmlListPtr) : xmlLinkPtr;

external (cdecl) xmlListEnd(arg0:xmlListPtr) : xmlLinkPtr;

external (cdecl) xmlListSize(arg0:xmlListPtr) : Int;

external (cdecl) xmlListPopFront(arg0:xmlListPtr) : ;

external (cdecl) xmlListPopBack(arg0:xmlListPtr) : ;

external (cdecl) xmlListPushFront(arg0:xmlListPtr, arg1:OpaquePointer) : Int;

external (cdecl) xmlListPushBack(arg0:xmlListPtr, arg1:OpaquePointer) : Int;

external (cdecl) xmlListReverse(arg0:xmlListPtr) : ;

external (cdecl) xmlListSort(arg0:xmlListPtr) : ;

external (cdecl) xmlListWalk(arg0:xmlListPtr, arg1:xmlListWalker, arg2:OpaquePointer) : ;

external (cdecl) xmlListReverseWalk(arg0:xmlListPtr, arg1:xmlListWalker, arg2:OpaquePointer) : ;

external (cdecl) xmlListMerge(arg0:xmlListPtr, arg1:xmlListPtr) : ;

external (cdecl) xmlListDup(arg0:xmlListPtr) : xmlListPtr;

external (cdecl) xmlListCopy(arg0:xmlListPtr, arg1:xmlListPtr) : Int;

external (cdecl) xmlLinkGetData(arg0:xmlLinkPtr) : OpaquePointer;

alias Struct__xmlAutomata = Opaque;

alias xmlAutomata = Struct__xmlAutomata;

alias xmlAutomataPtr = Pointer[xmlAutomata];

alias Struct__xmlAutomataState = Opaque;

alias xmlAutomataState = Struct__xmlAutomataState;

alias xmlAutomataStatePtr = Pointer[xmlAutomataState];

external (cdecl) xmlNewAutomata() : xmlAutomataPtr;

external (cdecl) xmlFreeAutomata(arg0:xmlAutomataPtr) : ;

external (cdecl) xmlAutomataGetInitState(arg0:xmlAutomataPtr) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataSetFinalState(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr) : Int;

external (cdecl) xmlAutomataNewState(arg0:xmlAutomataPtr) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewTransition(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Pointer[xmlChar], arg4:OpaquePointer) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewTransition2(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:OpaquePointer) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewNegTrans(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:OpaquePointer) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewCountTrans(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Pointer[xmlChar], arg4:Int, arg5:Int, arg6:OpaquePointer) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewCountTrans2(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:Int, arg6:Int, arg7:OpaquePointer) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewOnceTrans(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Pointer[xmlChar], arg4:Int, arg5:Int, arg6:OpaquePointer) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewOnceTrans2(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:Int, arg6:Int, arg7:OpaquePointer) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewAllTrans(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Int) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewEpsilon(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewCountedTrans(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Int) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewCounterTrans(arg0:xmlAutomataPtr, arg1:xmlAutomataStatePtr, arg2:xmlAutomataStatePtr, arg3:Int) : xmlAutomataStatePtr;

external (cdecl) xmlAutomataNewCounter(arg0:xmlAutomataPtr, arg1:Int, arg2:Int) : Int;

external (cdecl) xmlAutomataCompile(arg0:xmlAutomataPtr) : xmlRegexpPtr;

external (cdecl) xmlAutomataIsDeterminist(arg0:xmlAutomataPtr) : Int;

alias Struct__xmlValidState = Opaque;

alias xmlValidState = Struct__xmlValidState;

alias xmlValidStatePtr = Pointer[xmlValidState];

alias xmlValidityErrorFunc = VarArgsCCodePointer[[OpaquePointer, Pointer[CChar]],[]];

alias xmlValidityWarningFunc = VarArgsCCodePointer[[OpaquePointer, Pointer[CChar]],[]];

alias xmlValidCtxt = Struct__xmlValidCtxt;

alias xmlValidCtxtPtr = Pointer[xmlValidCtxt];

record Struct__xmlValidCtxt (
    userData : OpaquePointer,
    error : xmlValidityErrorFunc,
    warning : xmlValidityWarningFunc,
    node : xmlNodePtr,
    nodeNr : Int,
    nodeMax : Int,
    nodeTab : Pointer[xmlNodePtr],
    finishDtd : UInt,
    doc : xmlDocPtr,
    valid : Int,
    vstate : Pointer[xmlValidState],
    vstateNr : Int,
    vstateMax : Int,
    vstateTab : Pointer[xmlValidState],
    am : xmlAutomataPtr,
    state : xmlAutomataStatePtr,
);

alias xmlNotationTable = Struct__xmlHashTable;

alias xmlNotationTablePtr = Pointer[xmlNotationTable];

alias xmlElementTable = Struct__xmlHashTable;

alias xmlElementTablePtr = Pointer[xmlElementTable];

alias xmlAttributeTable = Struct__xmlHashTable;

alias xmlAttributeTablePtr = Pointer[xmlAttributeTable];

alias xmlIDTable = Struct__xmlHashTable;

alias xmlIDTablePtr = Pointer[xmlIDTable];

alias xmlRefTable = Struct__xmlHashTable;

alias xmlRefTablePtr = Pointer[xmlRefTable];

external (cdecl) xmlAddNotationDecl(arg0:xmlValidCtxtPtr, arg1:xmlDtdPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:Pointer[xmlChar]) : xmlNotationPtr;

external (cdecl) xmlCopyNotationTable(arg0:xmlNotationTablePtr) : xmlNotationTablePtr;

external (cdecl) xmlFreeNotationTable(arg0:xmlNotationTablePtr) : ;

external (cdecl) xmlDumpNotationDecl(arg0:xmlBufferPtr, arg1:xmlNotationPtr) : ;

external (cdecl) xmlDumpNotationTable(arg0:xmlBufferPtr, arg1:xmlNotationTablePtr) : ;

external (cdecl) xmlNewElementContent(arg0:Pointer[xmlChar], arg1:xmlElementContentType) : xmlElementContentPtr;

external (cdecl) xmlCopyElementContent(arg0:xmlElementContentPtr) : xmlElementContentPtr;

external (cdecl) xmlFreeElementContent(arg0:xmlElementContentPtr) : ;

external (cdecl) xmlNewDocElementContent(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:xmlElementContentType) : xmlElementContentPtr;

external (cdecl) xmlCopyDocElementContent(arg0:xmlDocPtr, arg1:xmlElementContentPtr) : xmlElementContentPtr;

external (cdecl) xmlFreeDocElementContent(arg0:xmlDocPtr, arg1:xmlElementContentPtr) : ;

external (cdecl) xmlSnprintfElementContent(arg0:Pointer[CChar], arg1:Int, arg2:xmlElementContentPtr, arg3:Int) : ;

external (cdecl) xmlSprintfElementContent(arg0:Pointer[CChar], arg1:xmlElementContentPtr, arg2:Int) : ;

external (cdecl) xmlAddElementDecl(arg0:xmlValidCtxtPtr, arg1:xmlDtdPtr, arg2:Pointer[xmlChar], arg3:xmlElementTypeVal, arg4:xmlElementContentPtr) : xmlElementPtr;

external (cdecl) xmlCopyElementTable(arg0:xmlElementTablePtr) : xmlElementTablePtr;

external (cdecl) xmlFreeElementTable(arg0:xmlElementTablePtr) : ;

external (cdecl) xmlDumpElementTable(arg0:xmlBufferPtr, arg1:xmlElementTablePtr) : ;

external (cdecl) xmlDumpElementDecl(arg0:xmlBufferPtr, arg1:xmlElementPtr) : ;

external (cdecl) xmlCreateEnumeration(arg0:Pointer[xmlChar]) : xmlEnumerationPtr;

external (cdecl) xmlFreeEnumeration(arg0:xmlEnumerationPtr) : ;

external (cdecl) xmlCopyEnumeration(arg0:xmlEnumerationPtr) : xmlEnumerationPtr;

external (cdecl) xmlAddAttributeDecl(arg0:xmlValidCtxtPtr, arg1:xmlDtdPtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:xmlAttributeType, arg6:xmlAttributeDefault, arg7:Pointer[xmlChar], arg8:xmlEnumerationPtr) : xmlAttributePtr;

external (cdecl) xmlCopyAttributeTable(arg0:xmlAttributeTablePtr) : xmlAttributeTablePtr;

external (cdecl) xmlFreeAttributeTable(arg0:xmlAttributeTablePtr) : ;

external (cdecl) xmlDumpAttributeTable(arg0:xmlBufferPtr, arg1:xmlAttributeTablePtr) : ;

external (cdecl) xmlDumpAttributeDecl(arg0:xmlBufferPtr, arg1:xmlAttributePtr) : ;

external (cdecl) xmlAddID(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:Pointer[xmlChar], arg3:xmlAttrPtr) : xmlIDPtr;

external (cdecl) xmlFreeIDTable(arg0:xmlIDTablePtr) : ;

external (cdecl) xmlGetID(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlAttrPtr;

external (cdecl) xmlIsID(arg0:xmlDocPtr, arg1:xmlNodePtr, arg2:xmlAttrPtr) : Int;

external (cdecl) xmlRemoveID(arg0:xmlDocPtr, arg1:xmlAttrPtr) : Int;

external (cdecl) xmlAddRef(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:Pointer[xmlChar], arg3:xmlAttrPtr) : xmlRefPtr;

external (cdecl) xmlFreeRefTable(arg0:xmlRefTablePtr) : ;

external (cdecl) xmlIsRef(arg0:xmlDocPtr, arg1:xmlNodePtr, arg2:xmlAttrPtr) : Int;

external (cdecl) xmlRemoveRef(arg0:xmlDocPtr, arg1:xmlAttrPtr) : Int;

external (cdecl) xmlGetRefs(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlListPtr;

external (cdecl) xmlNewValidCtxt() : xmlValidCtxtPtr;

external (cdecl) xmlFreeValidCtxt(arg0:xmlValidCtxtPtr) : ;

external (cdecl) xmlValidateRoot(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr) : Int;

external (cdecl) xmlValidateElementDecl(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlElementPtr) : Int;

external (cdecl) xmlValidNormalizeAttributeValue(arg0:xmlDocPtr, arg1:xmlNodePtr, arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlValidCtxtNormalizeAttributeValue(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlValidateAttributeDecl(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlAttributePtr) : Int;

external (cdecl) xmlValidateAttributeValue(arg0:xmlAttributeType, arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlValidateNotationDecl(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlNotationPtr) : Int;

external (cdecl) xmlValidateDtd(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlDtdPtr) : Int;

external (cdecl) xmlValidateDtdFinal(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr) : Int;

external (cdecl) xmlValidateDocument(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr) : Int;

external (cdecl) xmlValidateElement(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr) : Int;

external (cdecl) xmlValidateOneElement(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr) : Int;

external (cdecl) xmlValidateOneAttribute(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:xmlAttrPtr, arg4:Pointer[xmlChar]) : Int;

external (cdecl) xmlValidateOneNamespace(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:Pointer[xmlChar], arg4:xmlNsPtr, arg5:Pointer[xmlChar]) : Int;

external (cdecl) xmlValidateDocumentFinal(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr) : Int;

external (cdecl) xmlValidateNotationUse(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:Pointer[xmlChar]) : Int;

external (cdecl) xmlIsMixedElement(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : Int;

external (cdecl) xmlGetDtdAttrDesc(arg0:xmlDtdPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlAttributePtr;

external (cdecl) xmlGetDtdQAttrDesc(arg0:xmlDtdPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : xmlAttributePtr;

external (cdecl) xmlGetDtdNotationDesc(arg0:xmlDtdPtr, arg1:Pointer[xmlChar]) : xmlNotationPtr;

external (cdecl) xmlGetDtdQElementDesc(arg0:xmlDtdPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlElementPtr;

external (cdecl) xmlGetDtdElementDesc(arg0:xmlDtdPtr, arg1:Pointer[xmlChar]) : xmlElementPtr;

external (cdecl) xmlValidGetPotentialChildren(arg0:Pointer[xmlElementContent], arg1:Pointer[Pointer[xmlChar]], arg2:Pointer[Int], arg3:Int) : Int;

external (cdecl) xmlValidGetValidElements(arg0:Pointer[xmlNode], arg1:Pointer[xmlNode], arg2:Pointer[Pointer[xmlChar]], arg3:Int) : Int;

external (cdecl) xmlValidateNameValue(arg0:Pointer[xmlChar]) : Int;

external (cdecl) xmlValidateNamesValue(arg0:Pointer[xmlChar]) : Int;

external (cdecl) xmlValidateNmtokenValue(arg0:Pointer[xmlChar]) : Int;

external (cdecl) xmlValidateNmtokensValue(arg0:Pointer[xmlChar]) : Int;

external (cdecl) xmlValidBuildContentModel(arg0:xmlValidCtxtPtr, arg1:xmlElementPtr) : Int;

external (cdecl) xmlValidatePushElement(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:Pointer[xmlChar]) : Int;

external (cdecl) xmlValidatePushCData(arg0:xmlValidCtxtPtr, arg1:Pointer[xmlChar], arg2:Int) : Int;

external (cdecl) xmlValidatePopElement(arg0:xmlValidCtxtPtr, arg1:xmlDocPtr, arg2:xmlNodePtr, arg3:Pointer[xmlChar]) : Int;

alias Enum_Unnamed13 = UInt;
alias XML_INTERNAL_GENERAL_ENTITY = UInt(1);
alias XML_EXTERNAL_GENERAL_PARSED_ENTITY = UInt(2);
alias XML_EXTERNAL_GENERAL_UNPARSED_ENTITY = UInt(3);
alias XML_INTERNAL_PARAMETER_ENTITY = UInt(4);
alias XML_EXTERNAL_PARAMETER_ENTITY = UInt(5);
alias XML_INTERNAL_PREDEFINED_ENTITY = UInt(6);

alias xmlEntityType = UInt;

record Struct__xmlEntity (
    _private : OpaquePointer,
    type : xmlElementType,
    name : Pointer[xmlChar],
    children : Pointer[Struct__xmlNode],
    last : Pointer[Struct__xmlNode],
    parent : Pointer[Struct__xmlDtd],
    next : Pointer[Struct__xmlNode],
    prev : Pointer[Struct__xmlNode],
    doc : Pointer[Struct__xmlDoc],
    orig : Pointer[xmlChar],
    content : Pointer[xmlChar],
    length : Int,
    etype : xmlEntityType,
    ExternalID : Pointer[xmlChar],
    SystemID : Pointer[xmlChar],
    nexte : Pointer[Struct__xmlEntity],
    URI : Pointer[xmlChar],
    owner : Int,
    checked : Int,
);

alias xmlEntitiesTable = Struct__xmlHashTable;

alias xmlEntitiesTablePtr = Pointer[xmlEntitiesTable];

external (cdecl) xmlInitializePredefinedEntities() : ;

external (cdecl) xmlNewEntity(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Int, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) xmlAddDocEntity(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Int, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) xmlAddDtdEntity(arg0:xmlDocPtr, arg1:Pointer[xmlChar], arg2:Int, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) xmlGetPredefinedEntity(arg0:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) xmlGetDocEntity(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) xmlGetDtdEntity(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) xmlGetParameterEntity(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) xmlEncodeEntities(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlEncodeEntitiesReentrant(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlEncodeSpecialChars(arg0:xmlDocPtr, arg1:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlCreateEntitiesTable() : xmlEntitiesTablePtr;

external (cdecl) xmlCopyEntitiesTable(arg0:xmlEntitiesTablePtr) : xmlEntitiesTablePtr;

external (cdecl) xmlFreeEntitiesTable(arg0:xmlEntitiesTablePtr) : ;

external (cdecl) xmlDumpEntitiesTable(arg0:xmlBufferPtr, arg1:xmlEntitiesTablePtr) : ;

external (cdecl) xmlDumpEntityDecl(arg0:xmlBufferPtr, arg1:xmlEntityPtr) : ;

external (cdecl) xmlCleanupPredefinedEntities() : ;

alias xmlParserInputDeallocate = CCodePointer[[Pointer[xmlChar]],[]];

record Struct__xmlParserInput (
    buf : xmlParserInputBufferPtr,
    filename : Pointer[CChar],
    directory : Pointer[CChar],
    base : Pointer[xmlChar],
    cur : Pointer[xmlChar],
    end : Pointer[xmlChar],
    length : Int,
    line : Int,
    col : Int,
    consumed : CULong,
    free : xmlParserInputDeallocate,
    encoding : Pointer[xmlChar],
    version : Pointer[xmlChar],
    standalone : Int,
    id : Int,
);

alias xmlParserNodeInfo = Struct__xmlParserNodeInfo;

alias xmlParserNodeInfoPtr = Pointer[xmlParserNodeInfo];

record Struct__xmlParserNodeInfo (
    node : Pointer[Struct__xmlNode],
    begin_pos : CULong,
    begin_line : CULong,
    end_pos : CULong,
    end_line : CULong,
);

alias xmlParserNodeInfoSeq = Struct__xmlParserNodeInfoSeq;

alias xmlParserNodeInfoSeqPtr = Pointer[xmlParserNodeInfoSeq];

record Struct__xmlParserNodeInfoSeq (
    maximum : CULong,
    length : CULong,
    buffer : Pointer[xmlParserNodeInfo],
);

alias Enum_Unnamed14 = Int;
alias XML_PARSER_EOF = Int(-1);
alias XML_PARSER_START = Int(0);
alias XML_PARSER_MISC = Int(1);
alias XML_PARSER_PI = Int(2);
alias XML_PARSER_DTD = Int(3);
alias XML_PARSER_PROLOG = Int(4);
alias XML_PARSER_COMMENT = Int(5);
alias XML_PARSER_START_TAG = Int(6);
alias XML_PARSER_CONTENT = Int(7);
alias XML_PARSER_CDATA_SECTION = Int(8);
alias XML_PARSER_END_TAG = Int(9);
alias XML_PARSER_ENTITY_DECL = Int(10);
alias XML_PARSER_ENTITY_VALUE = Int(11);
alias XML_PARSER_ATTRIBUTE_VALUE = Int(12);
alias XML_PARSER_SYSTEM_LITERAL = Int(13);
alias XML_PARSER_EPILOG = Int(14);
alias XML_PARSER_IGNORE = Int(15);
alias XML_PARSER_PUBLIC_LITERAL = Int(16);

alias xmlParserInputState = Int;

alias Enum_Unnamed15 = UInt;
alias XML_PARSE_UNKNOWN = UInt(0);
alias XML_PARSE_DOM = UInt(1);
alias XML_PARSE_SAX = UInt(2);
alias XML_PARSE_PUSH_DOM = UInt(3);
alias XML_PARSE_PUSH_SAX = UInt(4);
alias XML_PARSE_READER = UInt(5);

alias xmlParserMode = UInt;

record Struct__xmlParserCtxt (
    sax : Pointer[Struct__xmlSAXHandler],
    userData : OpaquePointer,
    myDoc : xmlDocPtr,
    wellFormed : Int,
    replaceEntities : Int,
    version : Pointer[xmlChar],
    encoding : Pointer[xmlChar],
    standalone : Int,
    html : Int,
    input : xmlParserInputPtr,
    inputNr : Int,
    inputMax : Int,
    inputTab : Pointer[xmlParserInputPtr],
    node : xmlNodePtr,
    nodeNr : Int,
    nodeMax : Int,
    nodeTab : Pointer[xmlNodePtr],
    record_info : Int,
    node_seq : xmlParserNodeInfoSeq,
    errNo : Int,
    hasExternalSubset : Int,
    hasPErefs : Int,
    external_ : Int,
    valid : Int,
    validate : Int,
    vctxt : xmlValidCtxt,
    instate : xmlParserInputState,
    token : Int,
    directory : Pointer[CChar],
    name : Pointer[xmlChar],
    nameNr : Int,
    nameMax : Int,
    nameTab : Pointer[Pointer[xmlChar]],
    nbChars : CLong,
    checkIndex : CLong,
    keepBlanks : Int,
    disableSAX : Int,
    inSubset : Int,
    intSubName : Pointer[xmlChar],
    extSubURI : Pointer[xmlChar],
    extSubSystem : Pointer[xmlChar],
    space : Pointer[Int],
    spaceNr : Int,
    spaceMax : Int,
    spaceTab : Pointer[Int],
    depth : Int,
    entity : xmlParserInputPtr,
    charset : Int,
    nodelen : Int,
    nodemem : Int,
    pedantic : Int,
    _private : OpaquePointer,
    loadsubset : Int,
    linenumbers : Int,
    catalogs : OpaquePointer,
    recovery : Int,
    progressive : Int,
    dict : xmlDictPtr,
    atts : Pointer[Pointer[xmlChar]],
    maxatts : Int,
    docdict : Int,
    str_xml : Pointer[xmlChar],
    str_xmlns : Pointer[xmlChar],
    str_xml_ns : Pointer[xmlChar],
    sax2 : Int,
    nsNr : Int,
    nsMax : Int,
    nsTab : Pointer[Pointer[xmlChar]],
    attallocs : Pointer[Int],
    pushTab : Pointer[OpaquePointer],
    attsDefault : xmlHashTablePtr,
    attsSpecial : xmlHashTablePtr,
    nsWellFormed : Int,
    options : Int,
    dictNames : Int,
    freeElemsNr : Int,
    freeElems : xmlNodePtr,
    freeAttrsNr : Int,
    freeAttrs : xmlAttrPtr,
    lastError : xmlError,
    parseMode : xmlParserMode,
    nbentities : CULong,
    sizeentities : CULong,
    nodeInfo : Pointer[xmlParserNodeInfo],
    nodeInfoNr : Int,
    nodeInfoMax : Int,
    nodeInfoTab : Pointer[xmlParserNodeInfo],
);

record Struct__xmlSAXLocator (
    getPublicId : CCodePointer[[OpaquePointer],[Pointer[xmlChar]]],
    getSystemId : CCodePointer[[OpaquePointer],[Pointer[xmlChar]]],
    getLineNumber : CCodePointer[[OpaquePointer],[Int]],
    getColumnNumber : CCodePointer[[OpaquePointer],[Int]],
);

alias resolveEntitySAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar]],[xmlParserInputPtr]];

alias internalSubsetSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar], Pointer[xmlChar]],[]];

alias externalSubsetSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar], Pointer[xmlChar]],[]];

alias getEntitySAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar]],[xmlEntityPtr]];

alias getParameterEntitySAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar]],[xmlEntityPtr]];

alias entityDeclSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Int, Pointer[xmlChar], Pointer[xmlChar], Pointer[xmlChar]],[]];

alias notationDeclSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar], Pointer[xmlChar]],[]];

alias attributeDeclSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar], Int, Int, Pointer[xmlChar], xmlEnumerationPtr],[]];

alias elementDeclSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Int, xmlElementContentPtr],[]];

alias unparsedEntityDeclSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar], Pointer[xmlChar], Pointer[xmlChar]],[]];

alias setDocumentLocatorSAXFunc = CCodePointer[[OpaquePointer, xmlSAXLocatorPtr],[]];

alias startDocumentSAXFunc = CCodePointer[[OpaquePointer],[]];

alias endDocumentSAXFunc = CCodePointer[[OpaquePointer],[]];

alias startElementSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[Pointer[xmlChar]]],[]];

alias endElementSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar]],[]];

alias attributeSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar]],[]];

alias referenceSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar]],[]];

alias charactersSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Int],[]];

alias ignorableWhitespaceSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Int],[]];

alias processingInstructionSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar]],[]];

alias commentSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar]],[]];

alias cdataBlockSAXFunc = CCodePointer[[OpaquePointer, Pointer[xmlChar], Int],[]];

alias warningSAXFunc = VarArgsCCodePointer[[OpaquePointer, Pointer[CChar]],[]];

alias errorSAXFunc = VarArgsCCodePointer[[OpaquePointer, Pointer[CChar]],[]];

alias fatalErrorSAXFunc = VarArgsCCodePointer[[OpaquePointer, Pointer[CChar]],[]];

alias isStandaloneSAXFunc = CCodePointer[[OpaquePointer],[Int]];

alias hasInternalSubsetSAXFunc = CCodePointer[[OpaquePointer],[Int]];

alias hasExternalSubsetSAXFunc = CCodePointer[[OpaquePointer],[Int]];

alias startElementNsSAX2Func = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar], Pointer[xmlChar], Int, Pointer[Pointer[xmlChar]], Int, Int, Pointer[Pointer[xmlChar]]],[]];

alias endElementNsSAX2Func = CCodePointer[[OpaquePointer, Pointer[xmlChar], Pointer[xmlChar], Pointer[xmlChar]],[]];

record Struct__xmlSAXHandler (
    internalSubset : internalSubsetSAXFunc,
    isStandalone : isStandaloneSAXFunc,
    hasInternalSubset : hasInternalSubsetSAXFunc,
    hasExternalSubset : hasExternalSubsetSAXFunc,
    resolveEntity : resolveEntitySAXFunc,
    getEntity : getEntitySAXFunc,
    entityDecl : entityDeclSAXFunc,
    notationDecl : notationDeclSAXFunc,
    attributeDecl : attributeDeclSAXFunc,
    elementDecl : elementDeclSAXFunc,
    unparsedEntityDecl : unparsedEntityDeclSAXFunc,
    setDocumentLocator : setDocumentLocatorSAXFunc,
    startDocument : startDocumentSAXFunc,
    endDocument : endDocumentSAXFunc,
    startElement : startElementSAXFunc,
    endElement : endElementSAXFunc,
    reference : referenceSAXFunc,
    characters : charactersSAXFunc,
    ignorableWhitespace : ignorableWhitespaceSAXFunc,
    processingInstruction : processingInstructionSAXFunc,
    comment : commentSAXFunc,
    warning : warningSAXFunc,
    error : errorSAXFunc,
    fatalError : fatalErrorSAXFunc,
    getParameterEntity : getParameterEntitySAXFunc,
    cdataBlock : cdataBlockSAXFunc,
    externalSubset : externalSubsetSAXFunc,
    initialized : UInt,
    _private : OpaquePointer,
    startElementNs : startElementNsSAX2Func,
    endElementNs : endElementNsSAX2Func,
    serror : xmlStructuredErrorFunc,
);

alias xmlSAXHandlerV1 = Struct__xmlSAXHandlerV1;

alias xmlSAXHandlerV1Ptr = Pointer[xmlSAXHandlerV1];

record Struct__xmlSAXHandlerV1 (
    internalSubset : internalSubsetSAXFunc,
    isStandalone : isStandaloneSAXFunc,
    hasInternalSubset : hasInternalSubsetSAXFunc,
    hasExternalSubset : hasExternalSubsetSAXFunc,
    resolveEntity : resolveEntitySAXFunc,
    getEntity : getEntitySAXFunc,
    entityDecl : entityDeclSAXFunc,
    notationDecl : notationDeclSAXFunc,
    attributeDecl : attributeDeclSAXFunc,
    elementDecl : elementDeclSAXFunc,
    unparsedEntityDecl : unparsedEntityDeclSAXFunc,
    setDocumentLocator : setDocumentLocatorSAXFunc,
    startDocument : startDocumentSAXFunc,
    endDocument : endDocumentSAXFunc,
    startElement : startElementSAXFunc,
    endElement : endElementSAXFunc,
    reference : referenceSAXFunc,
    characters : charactersSAXFunc,
    ignorableWhitespace : ignorableWhitespaceSAXFunc,
    processingInstruction : processingInstructionSAXFunc,
    comment : commentSAXFunc,
    warning : warningSAXFunc,
    error : errorSAXFunc,
    fatalError : fatalErrorSAXFunc,
    getParameterEntity : getParameterEntitySAXFunc,
    cdataBlock : cdataBlockSAXFunc,
    externalSubset : externalSubsetSAXFunc,
    initialized : UInt,
);

alias xmlExternalEntityLoader = CCodePointer[[Pointer[CChar], Pointer[CChar], xmlParserCtxtPtr],[xmlParserInputPtr]];

alias Enum_Unnamed16 = Int;
alias XML_CHAR_ENCODING_ERROR = Int(-1);
alias XML_CHAR_ENCODING_NONE = Int(0);
alias XML_CHAR_ENCODING_UTF8 = Int(1);
alias XML_CHAR_ENCODING_UTF16LE = Int(2);
alias XML_CHAR_ENCODING_UTF16BE = Int(3);
alias XML_CHAR_ENCODING_UCS4LE = Int(4);
alias XML_CHAR_ENCODING_UCS4BE = Int(5);
alias XML_CHAR_ENCODING_EBCDIC = Int(6);
alias XML_CHAR_ENCODING_UCS4_2143 = Int(7);
alias XML_CHAR_ENCODING_UCS4_3412 = Int(8);
alias XML_CHAR_ENCODING_UCS2 = Int(9);
alias XML_CHAR_ENCODING_8859_1 = Int(10);
alias XML_CHAR_ENCODING_8859_2 = Int(11);
alias XML_CHAR_ENCODING_8859_3 = Int(12);
alias XML_CHAR_ENCODING_8859_4 = Int(13);
alias XML_CHAR_ENCODING_8859_5 = Int(14);
alias XML_CHAR_ENCODING_8859_6 = Int(15);
alias XML_CHAR_ENCODING_8859_7 = Int(16);
alias XML_CHAR_ENCODING_8859_8 = Int(17);
alias XML_CHAR_ENCODING_8859_9 = Int(18);
alias XML_CHAR_ENCODING_2022_JP = Int(19);
alias XML_CHAR_ENCODING_SHIFT_JIS = Int(20);
alias XML_CHAR_ENCODING_EUC_JP = Int(21);
alias XML_CHAR_ENCODING_ASCII = Int(22);

alias xmlCharEncoding = Int;

alias xmlCharEncodingInputFunc = CCodePointer[[Pointer[CUChar], Pointer[Int], Pointer[CUChar], Pointer[Int]],[Int]];

alias xmlCharEncodingOutputFunc = CCodePointer[[Pointer[CUChar], Pointer[Int], Pointer[CUChar], Pointer[Int]],[Int]];

alias xmlCharEncodingHandler = Struct__xmlCharEncodingHandler;

alias xmlCharEncodingHandlerPtr = Pointer[xmlCharEncodingHandler];

record Struct__xmlCharEncodingHandler (
    name : Pointer[CChar],
    input : xmlCharEncodingInputFunc,
    output : xmlCharEncodingOutputFunc,
    iconv_in : iconv_t,
    iconv_out : iconv_t,
);

external (cdecl) xmlInitCharEncodingHandlers() : ;

external (cdecl) xmlCleanupCharEncodingHandlers() : ;

external (cdecl) xmlRegisterCharEncodingHandler(arg0:xmlCharEncodingHandlerPtr) : ;

external (cdecl) xmlGetCharEncodingHandler(arg0:xmlCharEncoding) : xmlCharEncodingHandlerPtr;

external (cdecl) xmlFindCharEncodingHandler(arg0:Pointer[CChar]) : xmlCharEncodingHandlerPtr;

external (cdecl) xmlNewCharEncodingHandler(arg0:Pointer[CChar], arg1:xmlCharEncodingInputFunc, arg2:xmlCharEncodingOutputFunc) : xmlCharEncodingHandlerPtr;

external (cdecl) xmlAddEncodingAlias(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Int;

external (cdecl) xmlDelEncodingAlias(arg0:Pointer[CChar]) : Int;

external (cdecl) xmlGetEncodingAlias(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) xmlCleanupEncodingAliases() : ;

external (cdecl) xmlParseCharEncoding(arg0:Pointer[CChar]) : xmlCharEncoding;

external (cdecl) xmlGetCharEncodingName(arg0:xmlCharEncoding) : Pointer[CChar];

external (cdecl) xmlDetectCharEncoding(arg0:Pointer[CUChar], arg1:Int) : xmlCharEncoding;

external (cdecl) xmlCharEncOutFunc(arg0:Pointer[xmlCharEncodingHandler], arg1:xmlBufferPtr, arg2:xmlBufferPtr) : Int;

external (cdecl) xmlCharEncInFunc(arg0:Pointer[xmlCharEncodingHandler], arg1:xmlBufferPtr, arg2:xmlBufferPtr) : Int;

external (cdecl) xmlCharEncFirstLine(arg0:Pointer[xmlCharEncodingHandler], arg1:xmlBufferPtr, arg2:xmlBufferPtr) : Int;

external (cdecl) xmlCharEncCloseFunc(arg0:Pointer[xmlCharEncodingHandler]) : Int;

external (cdecl) UTF8Toisolat1(arg0:Pointer[CUChar], arg1:Pointer[Int], arg2:Pointer[CUChar], arg3:Pointer[Int]) : Int;

external (cdecl) isolat1ToUTF8(arg0:Pointer[CUChar], arg1:Pointer[Int], arg2:Pointer[CUChar], arg3:Pointer[Int]) : Int;

alias xmlInputMatchCallback = CCodePointer[[Pointer[CChar]],[Int]];

alias xmlInputOpenCallback = CCodePointer[[Pointer[CChar]],[OpaquePointer]];

alias xmlInputReadCallback = CCodePointer[[OpaquePointer, Pointer[CChar], Int],[Int]];

alias xmlInputCloseCallback = CCodePointer[[OpaquePointer],[Int]];

alias xmlOutputMatchCallback = CCodePointer[[Pointer[CChar]],[Int]];

alias xmlOutputOpenCallback = CCodePointer[[Pointer[CChar]],[OpaquePointer]];

alias xmlOutputWriteCallback = CCodePointer[[OpaquePointer, Pointer[CChar], Int],[Int]];

alias xmlOutputCloseCallback = CCodePointer[[OpaquePointer],[Int]];

record Struct__xmlParserInputBuffer (
    context : OpaquePointer,
    readcallback : xmlInputReadCallback,
    closecallback : xmlInputCloseCallback,
    encoder : xmlCharEncodingHandlerPtr,
    buffer : xmlBufferPtr,
    raw : xmlBufferPtr,
    compressed : Int,
    error : Int,
    rawconsumed : CULong,
);

record Struct__xmlOutputBuffer (
    context : OpaquePointer,
    writecallback : xmlOutputWriteCallback,
    closecallback : xmlOutputCloseCallback,
    encoder : xmlCharEncodingHandlerPtr,
    buffer : xmlBufferPtr,
    conv : xmlBufferPtr,
    written : Int,
    error : Int,
);

external (cdecl) xmlCleanupInputCallbacks() : ;

external (cdecl) xmlPopInputCallbacks() : Int;

external (cdecl) xmlRegisterDefaultInputCallbacks() : ;

external (cdecl) xmlAllocParserInputBuffer(arg0:xmlCharEncoding) : xmlParserInputBufferPtr;

external (cdecl) xmlParserInputBufferCreateFilename(arg0:Pointer[CChar], arg1:xmlCharEncoding) : xmlParserInputBufferPtr;

external (cdecl) xmlParserInputBufferCreateFile(arg0:Pointer[FILE], arg1:xmlCharEncoding) : xmlParserInputBufferPtr;

external (cdecl) xmlParserInputBufferCreateFd(arg0:Int, arg1:xmlCharEncoding) : xmlParserInputBufferPtr;

external (cdecl) xmlParserInputBufferCreateMem(arg0:Pointer[CChar], arg1:Int, arg2:xmlCharEncoding) : xmlParserInputBufferPtr;

external (cdecl) xmlParserInputBufferCreateStatic(arg0:Pointer[CChar], arg1:Int, arg2:xmlCharEncoding) : xmlParserInputBufferPtr;

external (cdecl) xmlParserInputBufferCreateIO(arg0:xmlInputReadCallback, arg1:xmlInputCloseCallback, arg2:OpaquePointer, arg3:xmlCharEncoding) : xmlParserInputBufferPtr;

external (cdecl) xmlParserInputBufferRead(arg0:xmlParserInputBufferPtr, arg1:Int) : Int;

external (cdecl) xmlParserInputBufferGrow(arg0:xmlParserInputBufferPtr, arg1:Int) : Int;

external (cdecl) xmlParserInputBufferPush(arg0:xmlParserInputBufferPtr, arg1:Int, arg2:Pointer[CChar]) : Int;

external (cdecl) xmlFreeParserInputBuffer(arg0:xmlParserInputBufferPtr) : ;

external (cdecl) xmlParserGetDirectory(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) xmlRegisterInputCallbacks(arg0:xmlInputMatchCallback, arg1:xmlInputOpenCallback, arg2:xmlInputReadCallback, arg3:xmlInputCloseCallback) : Int;

external (cdecl) __xmlParserInputBufferCreateFilename(arg0:Pointer[CChar], arg1:xmlCharEncoding) : xmlParserInputBufferPtr;

external (cdecl) xmlCleanupOutputCallbacks() : ;

external (cdecl) xmlRegisterDefaultOutputCallbacks() : ;

external (cdecl) xmlAllocOutputBuffer(arg0:xmlCharEncodingHandlerPtr) : xmlOutputBufferPtr;

external (cdecl) xmlOutputBufferCreateFilename(arg0:Pointer[CChar], arg1:xmlCharEncodingHandlerPtr, arg2:Int) : xmlOutputBufferPtr;

external (cdecl) xmlOutputBufferCreateFile(arg0:Pointer[FILE], arg1:xmlCharEncodingHandlerPtr) : xmlOutputBufferPtr;

external (cdecl) xmlOutputBufferCreateBuffer(arg0:xmlBufferPtr, arg1:xmlCharEncodingHandlerPtr) : xmlOutputBufferPtr;

external (cdecl) xmlOutputBufferCreateFd(arg0:Int, arg1:xmlCharEncodingHandlerPtr) : xmlOutputBufferPtr;

external (cdecl) xmlOutputBufferCreateIO(arg0:xmlOutputWriteCallback, arg1:xmlOutputCloseCallback, arg2:OpaquePointer, arg3:xmlCharEncodingHandlerPtr) : xmlOutputBufferPtr;

external (cdecl) xmlOutputBufferWrite(arg0:xmlOutputBufferPtr, arg1:Int, arg2:Pointer[CChar]) : Int;

external (cdecl) xmlOutputBufferWriteString(arg0:xmlOutputBufferPtr, arg1:Pointer[CChar]) : Int;

external (cdecl) xmlOutputBufferWriteEscape(arg0:xmlOutputBufferPtr, arg1:Pointer[xmlChar], arg2:xmlCharEncodingOutputFunc) : Int;

external (cdecl) xmlOutputBufferFlush(arg0:xmlOutputBufferPtr) : Int;

external (cdecl) xmlOutputBufferClose(arg0:xmlOutputBufferPtr) : Int;

external (cdecl) xmlRegisterOutputCallbacks(arg0:xmlOutputMatchCallback, arg1:xmlOutputOpenCallback, arg2:xmlOutputWriteCallback, arg3:xmlOutputCloseCallback) : Int;

external (cdecl) __xmlOutputBufferCreateFilename(arg0:Pointer[CChar], arg1:xmlCharEncodingHandlerPtr, arg2:Int) : xmlOutputBufferPtr;

external (cdecl) xmlRegisterHTTPPostCallbacks() : ;

external (cdecl) xmlCheckHTTPInput(arg0:xmlParserCtxtPtr, arg1:xmlParserInputPtr) : xmlParserInputPtr;

external (cdecl) xmlNoNetExternalEntityLoader(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:xmlParserCtxtPtr) : xmlParserInputPtr;

external (cdecl) xmlNormalizeWindowsPath(arg0:Pointer[xmlChar]) : Pointer[xmlChar];

external (cdecl) xmlCheckFilename(arg0:Pointer[CChar]) : Int;

external (cdecl) xmlFileMatch(arg0:Pointer[CChar]) : Int;

external (cdecl) xmlFileOpen(arg0:Pointer[CChar]) : OpaquePointer;

external (cdecl) xmlFileRead(arg0:OpaquePointer, arg1:Pointer[CChar], arg2:Int) : Int;

external (cdecl) xmlFileClose(arg0:OpaquePointer) : Int;

external (cdecl) xmlIOHTTPMatch(arg0:Pointer[CChar]) : Int;

external (cdecl) xmlIOHTTPOpen(arg0:Pointer[CChar]) : OpaquePointer;

external (cdecl) xmlIOHTTPOpenW(arg0:Pointer[CChar], arg1:Int) : OpaquePointer;

external (cdecl) xmlIOHTTPRead(arg0:OpaquePointer, arg1:Pointer[CChar], arg2:Int) : Int;

external (cdecl) xmlIOHTTPClose(arg0:OpaquePointer) : Int;

external (cdecl) xmlIOFTPMatch(arg0:Pointer[CChar]) : Int;

external (cdecl) xmlIOFTPOpen(arg0:Pointer[CChar]) : OpaquePointer;

external (cdecl) xmlIOFTPRead(arg0:OpaquePointer, arg1:Pointer[CChar], arg2:Int) : Int;

external (cdecl) xmlIOFTPClose(arg0:OpaquePointer) : Int;

external (cdecl) xmlInitParser() : ;

external (cdecl) xmlCleanupParser() : ;

external (cdecl) xmlParserInputRead(arg0:xmlParserInputPtr, arg1:Int) : Int;

external (cdecl) xmlParserInputGrow(arg0:xmlParserInputPtr, arg1:Int) : Int;

external (cdecl) xmlParseDoc(arg0:Pointer[xmlChar]) : xmlDocPtr;

external (cdecl) xmlParseFile(arg0:Pointer[CChar]) : xmlDocPtr;

external (cdecl) xmlParseMemory(arg0:Pointer[CChar], arg1:Int) : xmlDocPtr;

external (cdecl) xmlSubstituteEntitiesDefault(arg0:Int) : Int;

external (cdecl) xmlKeepBlanksDefault(arg0:Int) : Int;

external (cdecl) xmlStopParser(arg0:xmlParserCtxtPtr) : ;

external (cdecl) xmlPedanticParserDefault(arg0:Int) : Int;

external (cdecl) xmlLineNumbersDefault(arg0:Int) : Int;

external (cdecl) xmlRecoverDoc(arg0:Pointer[xmlChar]) : xmlDocPtr;

external (cdecl) xmlRecoverMemory(arg0:Pointer[CChar], arg1:Int) : xmlDocPtr;

external (cdecl) xmlRecoverFile(arg0:Pointer[CChar]) : xmlDocPtr;

external (cdecl) xmlParseDocument(arg0:xmlParserCtxtPtr) : Int;

external (cdecl) xmlParseExtParsedEnt(arg0:xmlParserCtxtPtr) : Int;

external (cdecl) xmlSAXUserParseFile(arg0:xmlSAXHandlerPtr, arg1:OpaquePointer, arg2:Pointer[CChar]) : Int;

external (cdecl) xmlSAXUserParseMemory(arg0:xmlSAXHandlerPtr, arg1:OpaquePointer, arg2:Pointer[CChar], arg3:Int) : Int;

external (cdecl) xmlSAXParseDoc(arg0:xmlSAXHandlerPtr, arg1:Pointer[xmlChar], arg2:Int) : xmlDocPtr;

external (cdecl) xmlSAXParseMemory(arg0:xmlSAXHandlerPtr, arg1:Pointer[CChar], arg2:Int, arg3:Int) : xmlDocPtr;

external (cdecl) xmlSAXParseMemoryWithData(arg0:xmlSAXHandlerPtr, arg1:Pointer[CChar], arg2:Int, arg3:Int, arg4:OpaquePointer) : xmlDocPtr;

external (cdecl) xmlSAXParseFile(arg0:xmlSAXHandlerPtr, arg1:Pointer[CChar], arg2:Int) : xmlDocPtr;

external (cdecl) xmlSAXParseFileWithData(arg0:xmlSAXHandlerPtr, arg1:Pointer[CChar], arg2:Int, arg3:OpaquePointer) : xmlDocPtr;

external (cdecl) xmlSAXParseEntity(arg0:xmlSAXHandlerPtr, arg1:Pointer[CChar]) : xmlDocPtr;

external (cdecl) xmlParseEntity(arg0:Pointer[CChar]) : xmlDocPtr;

external (cdecl) xmlSAXParseDTD(arg0:xmlSAXHandlerPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlDtdPtr;

external (cdecl) xmlParseDTD(arg0:Pointer[xmlChar], arg1:Pointer[xmlChar]) : xmlDtdPtr;

external (cdecl) xmlIOParseDTD(arg0:xmlSAXHandlerPtr, arg1:xmlParserInputBufferPtr, arg2:xmlCharEncoding) : xmlDtdPtr;

external (cdecl) xmlParseBalancedChunkMemory(arg0:xmlDocPtr, arg1:xmlSAXHandlerPtr, arg2:OpaquePointer, arg3:Int, arg4:Pointer[xmlChar], arg5:Pointer[xmlNodePtr]) : Int;

external (cdecl) xmlParseInNodeContext(arg0:xmlNodePtr, arg1:Pointer[CChar], arg2:Int, arg3:Int, arg4:Pointer[xmlNodePtr]) : xmlParserErrors;

external (cdecl) xmlParseBalancedChunkMemoryRecover(arg0:xmlDocPtr, arg1:xmlSAXHandlerPtr, arg2:OpaquePointer, arg3:Int, arg4:Pointer[xmlChar], arg5:Pointer[xmlNodePtr], arg6:Int) : Int;

external (cdecl) xmlParseExternalEntity(arg0:xmlDocPtr, arg1:xmlSAXHandlerPtr, arg2:OpaquePointer, arg3:Int, arg4:Pointer[xmlChar], arg5:Pointer[xmlChar], arg6:Pointer[xmlNodePtr]) : Int;

external (cdecl) xmlParseCtxtExternalEntity(arg0:xmlParserCtxtPtr, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlNodePtr]) : Int;

external (cdecl) xmlNewParserCtxt() : xmlParserCtxtPtr;

external (cdecl) xmlInitParserCtxt(arg0:xmlParserCtxtPtr) : Int;

external (cdecl) xmlClearParserCtxt(arg0:xmlParserCtxtPtr) : ;

external (cdecl) xmlFreeParserCtxt(arg0:xmlParserCtxtPtr) : ;

external (cdecl) xmlSetupParserForBuffer(arg0:xmlParserCtxtPtr, arg1:Pointer[xmlChar], arg2:Pointer[CChar]) : ;

external (cdecl) xmlCreateDocParserCtxt(arg0:Pointer[xmlChar]) : xmlParserCtxtPtr;

external (cdecl) xmlGetFeaturesList(arg0:Pointer[Int], arg1:Pointer[Pointer[CChar]]) : Int;

external (cdecl) xmlGetFeature(arg0:xmlParserCtxtPtr, arg1:Pointer[CChar], arg2:OpaquePointer) : Int;

external (cdecl) xmlSetFeature(arg0:xmlParserCtxtPtr, arg1:Pointer[CChar], arg2:OpaquePointer) : Int;

external (cdecl) xmlCreatePushParserCtxt(arg0:xmlSAXHandlerPtr, arg1:OpaquePointer, arg2:Pointer[CChar], arg3:Int, arg4:Pointer[CChar]) : xmlParserCtxtPtr;

external (cdecl) xmlParseChunk(arg0:xmlParserCtxtPtr, arg1:Pointer[CChar], arg2:Int, arg3:Int) : Int;

external (cdecl) xmlCreateIOParserCtxt(arg0:xmlSAXHandlerPtr, arg1:OpaquePointer, arg2:xmlInputReadCallback, arg3:xmlInputCloseCallback, arg4:OpaquePointer, arg5:xmlCharEncoding) : xmlParserCtxtPtr;

external (cdecl) xmlNewIOInputStream(arg0:xmlParserCtxtPtr, arg1:xmlParserInputBufferPtr, arg2:xmlCharEncoding) : xmlParserInputPtr;

external (cdecl) xmlParserFindNodeInfo(arg0:xmlParserCtxtPtr, arg1:xmlNodePtr) : Pointer[xmlParserNodeInfo];

external (cdecl) xmlInitNodeInfoSeq(arg0:xmlParserNodeInfoSeqPtr) : ;

external (cdecl) xmlClearNodeInfoSeq(arg0:xmlParserNodeInfoSeqPtr) : ;

external (cdecl) xmlParserFindNodeInfoIndex(arg0:xmlParserNodeInfoSeqPtr, arg1:xmlNodePtr) : CULong;

external (cdecl) xmlParserAddNodeInfo(arg0:xmlParserCtxtPtr, arg1:xmlParserNodeInfoPtr) : ;

external (cdecl) xmlSetExternalEntityLoader(arg0:xmlExternalEntityLoader) : ;

external (cdecl) xmlGetExternalEntityLoader() : xmlExternalEntityLoader;

external (cdecl) xmlLoadExternalEntity(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:xmlParserCtxtPtr) : xmlParserInputPtr;

external (cdecl) xmlByteConsumed(arg0:xmlParserCtxtPtr) : CLong;

alias Enum_Unnamed17 = UInt;
alias XML_PARSE_RECOVER = UInt(1);
alias XML_PARSE_NOENT = UInt(2);
alias XML_PARSE_DTDLOAD = UInt(4);
alias XML_PARSE_DTDATTR = UInt(8);
alias XML_PARSE_DTDVALID = UInt(16);
alias XML_PARSE_NOERROR = UInt(32);
alias XML_PARSE_NOWARNING = UInt(64);
alias XML_PARSE_PEDANTIC = UInt(128);
alias XML_PARSE_NOBLANKS = UInt(256);
alias XML_PARSE_SAX1 = UInt(512);
alias XML_PARSE_XINCLUDE = UInt(1024);
alias XML_PARSE_NONET = UInt(2048);
alias XML_PARSE_NODICT = UInt(4096);
alias XML_PARSE_NSCLEAN = UInt(8192);
alias XML_PARSE_NOCDATA = UInt(16384);
alias XML_PARSE_NOXINCNODE = UInt(32768);
alias XML_PARSE_COMPACT = UInt(65536);
alias XML_PARSE_OLD10 = UInt(131072);
alias XML_PARSE_NOBASEFIX = UInt(262144);
alias XML_PARSE_HUGE = UInt(524288);
alias XML_PARSE_OLDSAX = UInt(1048576);

alias xmlParserOption = UInt;

external (cdecl) xmlCtxtReset(arg0:xmlParserCtxtPtr) : ;

external (cdecl) xmlCtxtResetPush(arg0:xmlParserCtxtPtr, arg1:Pointer[CChar], arg2:Int, arg3:Pointer[CChar], arg4:Pointer[CChar]) : Int;

external (cdecl) xmlCtxtUseOptions(arg0:xmlParserCtxtPtr, arg1:Int) : Int;

external (cdecl) xmlReadDoc(arg0:Pointer[xmlChar], arg1:Pointer[CChar], arg2:Pointer[CChar], arg3:Int) : xmlDocPtr;

external (cdecl) xmlReadFile(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Int) : xmlDocPtr;

external (cdecl) xmlReadMemory(arg0:Pointer[CChar], arg1:Int, arg2:Pointer[CChar], arg3:Pointer[CChar], arg4:Int) : xmlDocPtr;

external (cdecl) xmlReadFd(arg0:Int, arg1:Pointer[CChar], arg2:Pointer[CChar], arg3:Int) : xmlDocPtr;

external (cdecl) xmlReadIO(arg0:xmlInputReadCallback, arg1:xmlInputCloseCallback, arg2:OpaquePointer, arg3:Pointer[CChar], arg4:Pointer[CChar], arg5:Int) : xmlDocPtr;

external (cdecl) xmlCtxtReadDoc(arg0:xmlParserCtxtPtr, arg1:Pointer[xmlChar], arg2:Pointer[CChar], arg3:Pointer[CChar], arg4:Int) : xmlDocPtr;

external (cdecl) xmlCtxtReadFile(arg0:xmlParserCtxtPtr, arg1:Pointer[CChar], arg2:Pointer[CChar], arg3:Int) : xmlDocPtr;

external (cdecl) xmlCtxtReadMemory(arg0:xmlParserCtxtPtr, arg1:Pointer[CChar], arg2:Int, arg3:Pointer[CChar], arg4:Pointer[CChar], arg5:Int) : xmlDocPtr;

external (cdecl) xmlCtxtReadFd(arg0:xmlParserCtxtPtr, arg1:Int, arg2:Pointer[CChar], arg3:Pointer[CChar], arg4:Int) : xmlDocPtr;

external (cdecl) xmlCtxtReadIO(arg0:xmlParserCtxtPtr, arg1:xmlInputReadCallback, arg2:xmlInputCloseCallback, arg3:OpaquePointer, arg4:Pointer[CChar], arg5:Pointer[CChar], arg6:Int) : xmlDocPtr;

alias Enum_Unnamed18 = UInt;
alias XML_WITH_THREAD = UInt(1);
alias XML_WITH_TREE = UInt(2);
alias XML_WITH_OUTPUT = UInt(3);
alias XML_WITH_PUSH = UInt(4);
alias XML_WITH_READER = UInt(5);
alias XML_WITH_PATTERN = UInt(6);
alias XML_WITH_WRITER = UInt(7);
alias XML_WITH_SAX1 = UInt(8);
alias XML_WITH_FTP = UInt(9);
alias XML_WITH_HTTP = UInt(10);
alias XML_WITH_VALID = UInt(11);
alias XML_WITH_HTML = UInt(12);
alias XML_WITH_LEGACY = UInt(13);
alias XML_WITH_C14N = UInt(14);
alias XML_WITH_CATALOG = UInt(15);
alias XML_WITH_XPATH = UInt(16);
alias XML_WITH_XPTR = UInt(17);
alias XML_WITH_XINCLUDE = UInt(18);
alias XML_WITH_ICONV = UInt(19);
alias XML_WITH_ISO8859X = UInt(20);
alias XML_WITH_UNICODE = UInt(21);
alias XML_WITH_REGEXP = UInt(22);
alias XML_WITH_AUTOMATA = UInt(23);
alias XML_WITH_EXPR = UInt(24);
alias XML_WITH_SCHEMAS = UInt(25);
alias XML_WITH_SCHEMATRON = UInt(26);
alias XML_WITH_MODULES = UInt(27);
alias XML_WITH_DEBUG = UInt(28);
alias XML_WITH_DEBUG_MEM = UInt(29);
alias XML_WITH_DEBUG_RUN = UInt(30);
alias XML_WITH_ZLIB = UInt(31);
alias XML_WITH_ICU = UInt(32);
alias XML_WITH_NONE = UInt(99999);

alias xmlFeature = UInt;

external (cdecl) xmlHasFeature(arg0:xmlFeature) : Int;

alias xlinkHRef = Pointer[xmlChar];

alias xlinkRole = Pointer[xmlChar];

alias xlinkTitle = Pointer[xmlChar];

alias Enum_Unnamed19 = UInt;
alias XLINK_TYPE_NONE = UInt(0);
alias XLINK_TYPE_SIMPLE = UInt(1);
alias XLINK_TYPE_EXTENDED = UInt(2);
alias XLINK_TYPE_EXTENDED_SET = UInt(3);

alias xlinkType = UInt;

alias Enum_Unnamed20 = UInt;
alias XLINK_SHOW_NONE = UInt(0);
alias XLINK_SHOW_NEW = UInt(1);
alias XLINK_SHOW_EMBED = UInt(2);
alias XLINK_SHOW_REPLACE = UInt(3);

alias xlinkShow = UInt;

alias Enum_Unnamed21 = UInt;
alias XLINK_ACTUATE_NONE = UInt(0);
alias XLINK_ACTUATE_AUTO = UInt(1);
alias XLINK_ACTUATE_ONREQUEST = UInt(2);

alias xlinkActuate = UInt;

alias xlinkNodeDetectFunc = CCodePointer[[OpaquePointer, xmlNodePtr],[]];

alias xlinkSimpleLinkFunk = CCodePointer[[OpaquePointer, xmlNodePtr, xlinkHRef, xlinkRole, xlinkTitle],[]];

alias xlinkExtendedLinkFunk = CCodePointer[[OpaquePointer, xmlNodePtr, Int, Pointer[xlinkHRef], Pointer[xlinkRole], Int, Pointer[xlinkRole], Pointer[xlinkRole], Pointer[xlinkShow], Pointer[xlinkActuate], Int, Pointer[xlinkTitle], Pointer[Pointer[xmlChar]]],[]];

alias xlinkExtendedLinkSetFunk = CCodePointer[[OpaquePointer, xmlNodePtr, Int, Pointer[xlinkHRef], Pointer[xlinkRole], Int, Pointer[xlinkTitle], Pointer[Pointer[xmlChar]]],[]];

alias xlinkHandler = Struct__xlinkHandler;

alias xlinkHandlerPtr = Pointer[xlinkHandler];

record Struct__xlinkHandler (
    simple : xlinkSimpleLinkFunk,
    extended : xlinkExtendedLinkFunk,
    set : xlinkExtendedLinkSetFunk,
);

external (cdecl) xlinkGetDefaultDetect() : xlinkNodeDetectFunc;

external (cdecl) xlinkSetDefaultDetect(arg0:xlinkNodeDetectFunc) : ;

external (cdecl) xlinkGetDefaultHandler() : xlinkHandlerPtr;

external (cdecl) xlinkSetDefaultHandler(arg0:xlinkHandlerPtr) : ;

external (cdecl) xlinkIsLink(arg0:xmlDocPtr, arg1:xmlNodePtr) : xlinkType;

external (cdecl) getPublicId(arg0:OpaquePointer) : Pointer[xmlChar];

external (cdecl) getSystemId(arg0:OpaquePointer) : Pointer[xmlChar];

external (cdecl) setDocumentLocator(arg0:OpaquePointer, arg1:xmlSAXLocatorPtr) : ;

external (cdecl) getLineNumber(arg0:OpaquePointer) : Int;

external (cdecl) getColumnNumber(arg0:OpaquePointer) : Int;

external (cdecl) isStandalone(arg0:OpaquePointer) : Int;

external (cdecl) hasInternalSubset(arg0:OpaquePointer) : Int;

external (cdecl) hasExternalSubset(arg0:OpaquePointer) : Int;

external (cdecl) internalSubset(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : ;

external (cdecl) externalSubset(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : ;

external (cdecl) getEntity(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) getParameterEntity(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) resolveEntity(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlParserInputPtr;

external (cdecl) entityDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:Pointer[xmlChar]) : ;

external (cdecl) attributeDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Int, arg4:Int, arg5:Pointer[xmlChar], arg6:xmlEnumerationPtr) : ;

external (cdecl) elementDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int, arg3:xmlElementContentPtr) : ;

external (cdecl) notationDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : ;

external (cdecl) unparsedEntityDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:Pointer[xmlChar]) : ;

external (cdecl) startDocument(arg0:OpaquePointer) : ;

external (cdecl) endDocument(arg0:OpaquePointer) : ;

external (cdecl) attribute(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : ;

external (cdecl) startElement(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[Pointer[xmlChar]]) : ;

external (cdecl) endElement(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : ;

external (cdecl) reference(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : ;

external (cdecl) characters(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int) : ;

external (cdecl) ignorableWhitespace(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int) : ;

external (cdecl) processingInstruction(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : ;

external (cdecl) globalNamespace(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : ;

external (cdecl) setNamespace(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : ;

external (cdecl) getNamespace(arg0:OpaquePointer) : xmlNsPtr;

external (cdecl) checkNamespace(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : Int;

external (cdecl) namespaceDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : ;

external (cdecl) comment(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : ;

external (cdecl) cdataBlock(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int) : ;

external (cdecl) initxmlDefaultSAXHandler(arg0:Pointer[xmlSAXHandlerV1], arg1:Int) : ;

external (cdecl) inithtmlDefaultSAXHandler(arg0:Pointer[xmlSAXHandlerV1]) : ;

external (cdecl) initdocbDefaultSAXHandler(arg0:Pointer[xmlSAXHandlerV1]) : ;

external (cdecl) xmlSAX2GetPublicId(arg0:OpaquePointer) : Pointer[xmlChar];

external (cdecl) xmlSAX2GetSystemId(arg0:OpaquePointer) : Pointer[xmlChar];

external (cdecl) xmlSAX2SetDocumentLocator(arg0:OpaquePointer, arg1:xmlSAXLocatorPtr) : ;

external (cdecl) xmlSAX2GetLineNumber(arg0:OpaquePointer) : Int;

external (cdecl) xmlSAX2GetColumnNumber(arg0:OpaquePointer) : Int;

external (cdecl) xmlSAX2IsStandalone(arg0:OpaquePointer) : Int;

external (cdecl) xmlSAX2HasInternalSubset(arg0:OpaquePointer) : Int;

external (cdecl) xmlSAX2HasExternalSubset(arg0:OpaquePointer) : Int;

external (cdecl) xmlSAX2InternalSubset(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2ExternalSubset(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2GetEntity(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) xmlSAX2GetParameterEntity(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : xmlEntityPtr;

external (cdecl) xmlSAX2ResolveEntity(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : xmlParserInputPtr;

external (cdecl) xmlSAX2EntityDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int, arg3:Pointer[xmlChar], arg4:Pointer[xmlChar], arg5:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2AttributeDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Int, arg4:Int, arg5:Pointer[xmlChar], arg6:xmlEnumerationPtr) : ;

external (cdecl) xmlSAX2ElementDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int, arg3:xmlElementContentPtr) : ;

external (cdecl) xmlSAX2NotationDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2UnparsedEntityDecl(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2StartDocument(arg0:OpaquePointer) : ;

external (cdecl) xmlSAX2EndDocument(arg0:OpaquePointer) : ;

external (cdecl) xmlSAX2StartElement(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[Pointer[xmlChar]]) : ;

external (cdecl) xmlSAX2EndElement(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2StartElementNs(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar], arg4:Int, arg5:Pointer[Pointer[xmlChar]], arg6:Int, arg7:Int, arg8:Pointer[Pointer[xmlChar]]) : ;

external (cdecl) xmlSAX2EndElementNs(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar], arg3:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2Reference(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2Characters(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int) : ;

external (cdecl) xmlSAX2IgnorableWhitespace(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int) : ;

external (cdecl) xmlSAX2ProcessingInstruction(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2Comment(arg0:OpaquePointer, arg1:Pointer[xmlChar]) : ;

external (cdecl) xmlSAX2CDataBlock(arg0:OpaquePointer, arg1:Pointer[xmlChar], arg2:Int) : ;

external (cdecl) xmlSAXDefaultVersion(arg0:Int) : Int;

external (cdecl) xmlSAXVersion(arg0:Pointer[xmlSAXHandler], arg1:Int) : Int;

external (cdecl) xmlSAX2InitDefaultSAXHandler(arg0:Pointer[xmlSAXHandler], arg1:Int) : ;

external (cdecl) xmlSAX2InitHtmlDefaultSAXHandler(arg0:Pointer[xmlSAXHandler]) : ;

external (cdecl) htmlDefaultSAXHandlerInit() : ;

external (cdecl) xmlSAX2InitDocbDefaultSAXHandler(arg0:Pointer[xmlSAXHandler]) : ;

external (cdecl) docbDefaultSAXHandlerInit() : ;

external (cdecl) xmlDefaultSAXHandlerInit() : ;

external (cdecl) xmlInitGlobals() : ;

external (cdecl) xmlCleanupGlobals() : ;

alias xmlParserInputBufferCreateFilenameFunc = CCodePointer[[Pointer[CChar], xmlCharEncoding],[xmlParserInputBufferPtr]];

alias xmlOutputBufferCreateFilenameFunc = CCodePointer[[Pointer[CChar], xmlCharEncodingHandlerPtr, Int],[xmlOutputBufferPtr]];

external (cdecl) xmlParserInputBufferCreateFilenameDefault(arg0:xmlParserInputBufferCreateFilenameFunc) : xmlParserInputBufferCreateFilenameFunc;

external (cdecl) xmlOutputBufferCreateFilenameDefault(arg0:xmlOutputBufferCreateFilenameFunc) : xmlOutputBufferCreateFilenameFunc;

alias xmlRegisterNodeFunc = CCodePointer[[xmlNodePtr],[]];

alias xmlDeregisterNodeFunc = CCodePointer[[xmlNodePtr],[]];

alias xmlGlobalState = Struct__xmlGlobalState;

alias xmlGlobalStatePtr = Pointer[xmlGlobalState];

record Struct__xmlGlobalState (
    xmlParserVersion : Pointer[CChar],
    xmlDefaultSAXLocator : xmlSAXLocator,
    xmlDefaultSAXHandler : xmlSAXHandlerV1,
    docbDefaultSAXHandler : xmlSAXHandlerV1,
    htmlDefaultSAXHandler : xmlSAXHandlerV1,
    xmlFree : xmlFreeFunc,
    xmlMalloc : xmlMallocFunc,
    xmlMemStrdup : xmlStrdupFunc,
    xmlRealloc : xmlReallocFunc,
    xmlGenericError : xmlGenericErrorFunc,
    xmlStructuredError : xmlStructuredErrorFunc,
    xmlGenericErrorContext : OpaquePointer,
    oldXMLWDcompatibility : Int,
    xmlBufferAllocScheme : xmlBufferAllocationScheme,
    xmlDefaultBufferSize : Int,
    xmlSubstituteEntitiesDefaultValue : Int,
    xmlDoValidityCheckingDefaultValue : Int,
    xmlGetWarningsDefaultValue : Int,
    xmlKeepBlanksDefaultValue : Int,
    xmlLineNumbersDefaultValue : Int,
    xmlLoadExtDtdDefaultValue : Int,
    xmlParserDebugEntities : Int,
    xmlPedanticParserDefaultValue : Int,
    xmlSaveNoEmptyTags : Int,
    xmlIndentTreeOutput : Int,
    xmlTreeIndentString : Pointer[CChar],
    xmlRegisterNodeDefaultValue : xmlRegisterNodeFunc,
    xmlDeregisterNodeDefaultValue : xmlDeregisterNodeFunc,
    xmlMallocAtomic : xmlMallocFunc,
    xmlLastError : xmlError,
    xmlParserInputBufferCreateFilenameValue : xmlParserInputBufferCreateFilenameFunc,
    xmlOutputBufferCreateFilenameValue : xmlOutputBufferCreateFilenameFunc,
    xmlStructuredErrorContext : OpaquePointer,
);

external (cdecl) xmlInitializeGlobalState(arg0:xmlGlobalStatePtr) : ;

external (cdecl) xmlThrDefSetGenericErrorFunc(arg0:OpaquePointer, arg1:xmlGenericErrorFunc) : ;

external (cdecl) xmlThrDefSetStructuredErrorFunc(arg0:OpaquePointer, arg1:xmlStructuredErrorFunc) : ;

external (cdecl) xmlRegisterNodeDefault(arg0:xmlRegisterNodeFunc) : xmlRegisterNodeFunc;

external (cdecl) xmlThrDefRegisterNodeDefault(arg0:xmlRegisterNodeFunc) : xmlRegisterNodeFunc;

external (cdecl) xmlDeregisterNodeDefault(arg0:xmlDeregisterNodeFunc) : xmlDeregisterNodeFunc;

external (cdecl) xmlThrDefDeregisterNodeDefault(arg0:xmlDeregisterNodeFunc) : xmlDeregisterNodeFunc;

external (cdecl) xmlThrDefOutputBufferCreateFilenameDefault(arg0:xmlOutputBufferCreateFilenameFunc) : xmlOutputBufferCreateFilenameFunc;

external (cdecl) xmlThrDefParserInputBufferCreateFilenameDefault(arg0:xmlParserInputBufferCreateFilenameFunc) : xmlParserInputBufferCreateFilenameFunc;

external xmlMalloc : xmlMallocFunc;

external xmlMallocAtomic : xmlMallocFunc;

external xmlRealloc : xmlReallocFunc;

external xmlFree : xmlFreeFunc;

external xmlMemStrdup : xmlStrdupFunc;

external (cdecl) __docbDefaultSAXHandler() : Pointer[xmlSAXHandlerV1];

external (cdecl) __htmlDefaultSAXHandler() : Pointer[xmlSAXHandlerV1];

external (cdecl) __xmlLastError() : Pointer[xmlError];

external (cdecl) __oldXMLWDcompatibility() : Pointer[Int];

external (cdecl) __xmlBufferAllocScheme() : Pointer[xmlBufferAllocationScheme];

external (cdecl) xmlThrDefBufferAllocScheme(arg0:xmlBufferAllocationScheme) : xmlBufferAllocationScheme;

external (cdecl) __xmlDefaultBufferSize() : Pointer[Int];

external (cdecl) xmlThrDefDefaultBufferSize(arg0:Int) : Int;

external (cdecl) __xmlDefaultSAXHandler() : Pointer[xmlSAXHandlerV1];

external (cdecl) __xmlDefaultSAXLocator() : Pointer[xmlSAXLocator];

external (cdecl) __xmlDoValidityCheckingDefaultValue() : Pointer[Int];

external (cdecl) xmlThrDefDoValidityCheckingDefaultValue(arg0:Int) : Int;

external (cdecl) __xmlGenericError() : Pointer[xmlGenericErrorFunc];

external (cdecl) __xmlStructuredError() : Pointer[xmlStructuredErrorFunc];

external (cdecl) __xmlGenericErrorContext() : Pointer[OpaquePointer];

external (cdecl) __xmlStructuredErrorContext() : Pointer[OpaquePointer];

external (cdecl) __xmlGetWarningsDefaultValue() : Pointer[Int];

external (cdecl) xmlThrDefGetWarningsDefaultValue(arg0:Int) : Int;

external (cdecl) __xmlIndentTreeOutput() : Pointer[Int];

external (cdecl) xmlThrDefIndentTreeOutput(arg0:Int) : Int;

external (cdecl) __xmlTreeIndentString() : Pointer[Pointer[CChar]];

external (cdecl) xmlThrDefTreeIndentString(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) __xmlKeepBlanksDefaultValue() : Pointer[Int];

external (cdecl) xmlThrDefKeepBlanksDefaultValue(arg0:Int) : Int;

external (cdecl) __xmlLineNumbersDefaultValue() : Pointer[Int];

external (cdecl) xmlThrDefLineNumbersDefaultValue(arg0:Int) : Int;

external (cdecl) __xmlLoadExtDtdDefaultValue() : Pointer[Int];

external (cdecl) xmlThrDefLoadExtDtdDefaultValue(arg0:Int) : Int;

external (cdecl) __xmlParserDebugEntities() : Pointer[Int];

external (cdecl) xmlThrDefParserDebugEntities(arg0:Int) : Int;

external (cdecl) __xmlParserVersion() : Pointer[Pointer[CChar]];

external (cdecl) __xmlPedanticParserDefaultValue() : Pointer[Int];

external (cdecl) xmlThrDefPedanticParserDefaultValue(arg0:Int) : Int;

external (cdecl) __xmlSaveNoEmptyTags() : Pointer[Int];

external (cdecl) xmlThrDefSaveNoEmptyTags(arg0:Int) : Int;

external (cdecl) __xmlSubstituteEntitiesDefaultValue() : Pointer[Int];

external (cdecl) xmlThrDefSubstituteEntitiesDefaultValue(arg0:Int) : Int;

external (cdecl) __xmlRegisterNodeDefaultValue() : Pointer[xmlRegisterNodeFunc];

external (cdecl) __xmlDeregisterNodeDefaultValue() : Pointer[xmlDeregisterNodeFunc];

external (cdecl) __xmlParserInputBufferCreateFilenameValue() : Pointer[xmlParserInputBufferCreateFilenameFunc];

external (cdecl) __xmlOutputBufferCreateFilenameValue() : Pointer[xmlOutputBufferCreateFilenameFunc];

external (cdecl) xmlNewMutex() : xmlMutexPtr;

external (cdecl) xmlMutexLock(arg0:xmlMutexPtr) : ;

external (cdecl) xmlMutexUnlock(arg0:xmlMutexPtr) : ;

external (cdecl) xmlFreeMutex(arg0:xmlMutexPtr) : ;

external (cdecl) xmlNewRMutex() : xmlRMutexPtr;

external (cdecl) xmlRMutexLock(arg0:xmlRMutexPtr) : ;

external (cdecl) xmlRMutexUnlock(arg0:xmlRMutexPtr) : ;

external (cdecl) xmlFreeRMutex(arg0:xmlRMutexPtr) : ;

external (cdecl) xmlInitThreads() : ;

external (cdecl) xmlLockLibrary() : ;

external (cdecl) xmlUnlockLibrary() : ;

external (cdecl) xmlGetThreadId() : Int;

external (cdecl) xmlIsMainThread() : Int;

external (cdecl) xmlCleanupThreads() : ;

external (cdecl) xmlGetGlobalState() : xmlGlobalStatePtr;

