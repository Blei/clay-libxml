public import libxml.generated.*;

xmlString(str) = Pointer[xmlChar](cstring(str));

nodeListGetString(doc, nodeList) {
    var text = xmlNodeListGetString(doc, nodeList, 1);
    if (null?(text)) {
        return move(String());
    } else {
        var result = String(text);
        xmlFree(text);
        return move(result);
    }
}

record XmlNodePtrSequence (
    ptr : xmlNodePtr,
);

private record XmlNodePtrIterator (
    ptr : xmlNodePtr,
);

inline overload iterator(p:XmlNodePtrSequence) = XmlNodePtrIterator(p.ptr);

inline overload hasNext?(iter:XmlNodePtrIterator) = not null?(iter.ptr);

inline overload next(iter:XmlNodePtrIterator) {
    assert["boundsCheck"](hasNext?(iter));
    var res = iter.ptr;
    iter.ptr = res^.next;
    return res;
}
